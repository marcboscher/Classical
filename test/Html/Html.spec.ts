 
module Classical.Html.spec {

    //#region Imports

    import u = Classical.Utilities;
    import m = Classical.Html;
    import e = Classical.Html.Elements;
    import b = Classical.Binding;

    //#endregion Imports

    //#region Test Classes

    //#region TestElement

    class TestElement {

        //#region Fields

        private _name: string;
        private _elementName: string;
        private _factoryMethod: string;
        private _properties: IEnumerable<TestProperty>;

        //#endregion Fields

        //#region Properties

        get name(): string {
            return this._name;
        }

        get elementName(): string {
            return this._elementName;
        }

        get factoryMethod(): string {
            return this._factoryMethod;
        }

        get properties(): IEnumerable<TestProperty> {
            return this._properties;
        }

        //#endregion Properties

        //#region Constructors

        constructor(name: string, elementName: string, factoryMethod: string, properties: IEnumerable<TestProperty>) {
            this._name = name;
            this._elementName = elementName;
            this._factoryMethod = factoryMethod;
            this._properties = properties;
        }

        //#endregion Constructors

        //#region Methods

        public IsAutoGeneratedElement(): boolean {
            return this.name !== 'HtmlElement' && this.name !== 'HtmlElementContainer';
        }

        //#endregion Methods
    }

    //#endregion TestElement

    //#region TestProperty

    class TestProperty {

        //#region Fields

        private _propertyName: string;
        private _propertyElementName: string;
        private _type: string;
        private _testItems: IEnumerable<any>;
        private _testCode: string;
        private _isInitializable: boolean;
        private _isIdl: boolean;

        //#endregion Fields

        //#region Properties

        get propertyName(): string {
            return this._propertyName;
        }

        get propertyElementName(): string {
            return this._propertyElementName;
        }

        get type(): string {
            return this._type;
        }

        get testItems(): IEnumerable<any> {
            return this._testItems;
        }

        get testCode(): string {
            return this._testCode;
        }

        get isInitializable(): boolean {
            return this._isInitializable;
        }

        get isIdl(): boolean {
            return this._isIdl;
        }

        //#endregion Properties

        //#region Constructors

        constructor(propertyName: string, propertyElementName: string, factoryMethod: string, testItems: IEnumerable<any>, testCode?: string, isInitializable?: boolean, isIdl?: boolean) {
            this._propertyName = propertyName;
            this._propertyElementName = propertyElementName;
            this._type = factoryMethod;
            this._testItems = testItems;
            this._testCode = testCode;
            this._isInitializable = isInitializable;
            this._isIdl = isIdl;
        }

        //#endregion Constructors
    }

    //#endregion TestProperty

    //#endregion Test Classes

    //#region Variables

    var testHtmlElement: TestElement;
    var testHtmlElementContainer: TestElement;
    var elements = new Array<TestElement>();

	//#region Array Initialzation

	//#region HtmlElement

	var propertiesHtmlElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region classes

	var testHtmlElementclassesTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementclassesTestItems.add('');
	testHtmlElementclassesTestItems.add('234567');
	testHtmlElementclassesTestItems.add('Testing a long sentence just in case the property does not support it.');
	testHtmlElementclassesTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testHtmlElementclassesTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testHtmlElementclasses = new TestProperty('classes', 'className', 'string', testHtmlElementclassesTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementclasses);

	//#endregion classes

	//#region direction

	var testHtmlElementdirectionTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementdirectionTestItems.add('ltr');
	testHtmlElementdirectionTestItems.add('rtl');
	testHtmlElementdirectionTestItems.add('auto');

	//#endregion Initialize TestItems

	var testHtmlElementdirection = new TestProperty('direction', 'dir', 'string', testHtmlElementdirectionTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementdirection);

	//#endregion direction

	//#region draggable

	var testHtmlElementdraggableTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementdraggableTestItems.add(true);
	testHtmlElementdraggableTestItems.add(false);

	//#endregion Initialize TestItems

	var testHtmlElementdraggable = new TestProperty('draggable', 'draggable', 'boolean', testHtmlElementdraggableTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementdraggable);

	//#endregion draggable

	//#region hidden

	var testHtmlElementhiddenTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementhiddenTestItems.add(true);
	testHtmlElementhiddenTestItems.add(false);

	//#endregion Initialize TestItems

	var testHtmlElementhidden = new TestProperty('hidden', 'hidden', 'boolean', testHtmlElementhiddenTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementhidden);

	//#endregion hidden

	//#region id

	var testHtmlElementidTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementidTestItems.add('');
	testHtmlElementidTestItems.add('234567');
	testHtmlElementidTestItems.add('Testing a long sentence just in case the property does not support it.');
	testHtmlElementidTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testHtmlElementidTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testHtmlElementid = new TestProperty('id', 'id', 'string', testHtmlElementidTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementid);

	//#endregion id

	//#region language

	var testHtmlElementlanguageTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementlanguageTestItems.add('');
	testHtmlElementlanguageTestItems.add('234567');
	testHtmlElementlanguageTestItems.add('Testing a long sentence just in case the property does not support it.');
	testHtmlElementlanguageTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testHtmlElementlanguageTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testHtmlElementlanguage = new TestProperty('language', 'lang', 'string', testHtmlElementlanguageTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementlanguage);

	//#endregion language

	//#region spellCheck

	var testHtmlElementspellCheckTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementspellCheckTestItems.add(true);
	testHtmlElementspellCheckTestItems.add(false);

	//#endregion Initialize TestItems

	var testHtmlElementspellCheck = new TestProperty('spellCheck', 'spellcheck', 'boolean', testHtmlElementspellCheckTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementspellCheck);

	//#endregion spellCheck

	//#region title

	var testHtmlElementtitleTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testHtmlElementtitleTestItems.add('');
	testHtmlElementtitleTestItems.add('234567');
	testHtmlElementtitleTestItems.add('Testing a long sentence just in case the property does not support it.');
	testHtmlElementtitleTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testHtmlElementtitleTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testHtmlElementtitle = new TestProperty('title', 'title', 'string', testHtmlElementtitleTestItems, "", true, false);
	propertiesHtmlElement.add(testHtmlElementtitle);

	//#endregion title

	//#endregion Initialize Properties

	testHtmlElement = new TestElement('HtmlElement', '', '', propertiesHtmlElement);
	elements.add(testHtmlElement);

	//#endregion HtmlElement
	
	//#region HtmlElementContainer

	var propertiesHtmlElementContainer = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	testHtmlElementContainer = new TestElement('HtmlElementContainer', '', '', propertiesHtmlElementContainer);
	elements.add(testHtmlElementContainer);

	//#endregion HtmlElementContainer

	//#region AbbreviationElement

	var propertiesAbbreviationElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testAbbreviationElement = new TestElement('AbbreviationElement', 'abbr', 'abbr', propertiesAbbreviationElement);
	elements.add(testAbbreviationElement);

	//#endregion AbbreviationElement

	//#region AddressElement

	var propertiesAddressElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testAddressElement = new TestElement('AddressElement', 'address', 'address', propertiesAddressElement);
	elements.add(testAddressElement);

	//#endregion AddressElement

	//#region AnchorElement

	var propertiesAnchorElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region href

	var testAnchorElementhrefTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAnchorElementhrefTestItems.add('http://www.google.com/');
	testAnchorElementhrefTestItems.add('http://www.yahoo.com/');
	testAnchorElementhrefTestItems.add('http://www.msn.com/');
	testAnchorElementhrefTestItems.add('http://www.aol.com/');
	testAnchorElementhrefTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testAnchorElementhref = new TestProperty('href', 'href', 'string', testAnchorElementhrefTestItems, "", true, false);
	propertiesAnchorElement.add(testAnchorElementhref);

	//#endregion href

	//#region hrefLanguage

	var testAnchorElementhrefLanguageTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAnchorElementhrefLanguageTestItems.add('');
	testAnchorElementhrefLanguageTestItems.add('234567');
	testAnchorElementhrefLanguageTestItems.add('Testing a long sentence just in case the property does not support it.');
	testAnchorElementhrefLanguageTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testAnchorElementhrefLanguageTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testAnchorElementhrefLanguage = new TestProperty('hrefLanguage', 'hreflang', 'string', testAnchorElementhrefLanguageTestItems, "", true, false);
	propertiesAnchorElement.add(testAnchorElementhrefLanguage);

	//#endregion hrefLanguage

	//#region relationship

	var testAnchorElementrelationshipTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAnchorElementrelationshipTestItems.add('');
	testAnchorElementrelationshipTestItems.add('234567');
	testAnchorElementrelationshipTestItems.add('Testing a long sentence just in case the property does not support it.');
	testAnchorElementrelationshipTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testAnchorElementrelationshipTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testAnchorElementrelationship = new TestProperty('relationship', 'rel', 'string', testAnchorElementrelationshipTestItems, "", true, false);
	propertiesAnchorElement.add(testAnchorElementrelationship);

	//#endregion relationship

	//#region target

	var testAnchorElementtargetTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAnchorElementtargetTestItems.add('_self');
	testAnchorElementtargetTestItems.add('_blank');
	testAnchorElementtargetTestItems.add('_parent');
	testAnchorElementtargetTestItems.add('_top');

	//#endregion Initialize TestItems

	var testAnchorElementtarget = new TestProperty('target', 'target', 'string', testAnchorElementtargetTestItems, "", true, false);
	propertiesAnchorElement.add(testAnchorElementtarget);

	//#endregion target

	//#region type

	var testAnchorElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAnchorElementtypeTestItems.add('');
	testAnchorElementtypeTestItems.add('234567');
	testAnchorElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testAnchorElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testAnchorElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testAnchorElementtype = new TestProperty('type', 'type', 'string', testAnchorElementtypeTestItems, "", true, false);
	propertiesAnchorElement.add(testAnchorElementtype);

	//#endregion type

	//#endregion Initialize Properties

	var testAnchorElement = new TestElement('AnchorElement', 'a', 'a', propertiesAnchorElement);
	elements.add(testAnchorElement);

	//#endregion AnchorElement

	//#region AreaElement

	var propertiesAreaElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region alternate

	var testAreaElementalternateTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAreaElementalternateTestItems.add('');
	testAreaElementalternateTestItems.add('234567');
	testAreaElementalternateTestItems.add('Testing a long sentence just in case the property does not support it.');
	testAreaElementalternateTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testAreaElementalternateTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testAreaElementalternate = new TestProperty('alternate', 'alt', 'string', testAreaElementalternateTestItems, "", true, false);
	propertiesAreaElement.add(testAreaElementalternate);

	//#endregion alternate

	//#region coordinates

	var testAreaElementcoordinatesTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAreaElementcoordinatesTestItems.add('');
	testAreaElementcoordinatesTestItems.add('234567');
	testAreaElementcoordinatesTestItems.add('Testing a long sentence just in case the property does not support it.');
	testAreaElementcoordinatesTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testAreaElementcoordinatesTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testAreaElementcoordinates = new TestProperty('coordinates', 'coords', 'string', testAreaElementcoordinatesTestItems, "", true, false);
	propertiesAreaElement.add(testAreaElementcoordinates);

	//#endregion coordinates

	//#region href

	var testAreaElementhrefTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAreaElementhrefTestItems.add('http://www.google.com/');
	testAreaElementhrefTestItems.add('http://www.yahoo.com/');
	testAreaElementhrefTestItems.add('http://www.msn.com/');
	testAreaElementhrefTestItems.add('http://www.aol.com/');
	testAreaElementhrefTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testAreaElementhref = new TestProperty('href', 'href', 'string', testAreaElementhrefTestItems, "", true, false);
	propertiesAreaElement.add(testAreaElementhref);

	//#endregion href

	//#region shape

	var testAreaElementshapeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAreaElementshapeTestItems.add('');
	testAreaElementshapeTestItems.add('234567');
	testAreaElementshapeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testAreaElementshapeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testAreaElementshapeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testAreaElementshape = new TestProperty('shape', 'shape', 'string', testAreaElementshapeTestItems, "", true, false);
	propertiesAreaElement.add(testAreaElementshape);

	//#endregion shape

	//#region target

	var testAreaElementtargetTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAreaElementtargetTestItems.add('_self');
	testAreaElementtargetTestItems.add('_blank');
	testAreaElementtargetTestItems.add('_parent');
	testAreaElementtargetTestItems.add('_top');

	//#endregion Initialize TestItems

	var testAreaElementtarget = new TestProperty('target', 'target', 'string', testAreaElementtargetTestItems, "", true, false);
	propertiesAreaElement.add(testAreaElementtarget);

	//#endregion target

	//#endregion Initialize Properties

	var testAreaElement = new TestElement('AreaElement', 'area', 'area', propertiesAreaElement);
	elements.add(testAreaElement);

	//#endregion AreaElement

	//#region ArticleElement

	var propertiesArticleElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testArticleElement = new TestElement('ArticleElement', 'article', 'article', propertiesArticleElement);
	elements.add(testArticleElement);

	//#endregion ArticleElement

	//#region AsideElement

	var propertiesAsideElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testAsideElement = new TestElement('AsideElement', 'aside', 'aside', propertiesAsideElement);
	elements.add(testAsideElement);

	//#endregion AsideElement

	//#region AudioElement

	var propertiesAudioElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region autoPlay

	var testAudioElementautoPlayTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementautoPlayTestItems.add(true);
	testAudioElementautoPlayTestItems.add(false);

	//#endregion Initialize TestItems

	var testAudioElementautoPlay = new TestProperty('autoPlay', 'autoplay', 'boolean', testAudioElementautoPlayTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementautoPlay);

	//#endregion autoPlay

	//#region buffered

	var testAudioElementbufferedTestItems = new Array<any>();
	
	//#region Initialize TestItems


	//#endregion Initialize TestItems

	var testAudioElementbuffered = new TestProperty('buffered', 'buffered', 'TimeRanges', testAudioElementbufferedTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementbuffered);

	//#endregion buffered

	//#region controls

	var testAudioElementcontrolsTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementcontrolsTestItems.add(true);
	testAudioElementcontrolsTestItems.add(false);

	//#endregion Initialize TestItems

	var testAudioElementcontrols = new TestProperty('controls', 'controls', 'boolean', testAudioElementcontrolsTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementcontrols);

	//#endregion controls

	//#region loop

	var testAudioElementloopTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementloopTestItems.add(true);
	testAudioElementloopTestItems.add(false);

	//#endregion Initialize TestItems

	var testAudioElementloop = new TestProperty('loop', 'loop', 'boolean', testAudioElementloopTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementloop);

	//#endregion loop

	//#region muted

	var testAudioElementmutedTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementmutedTestItems.add(true);
	testAudioElementmutedTestItems.add(false);

	//#endregion Initialize TestItems

	var testAudioElementmuted = new TestProperty('muted', 'muted', 'boolean', testAudioElementmutedTestItems, "", true, true);
	propertiesAudioElement.add(testAudioElementmuted);

	//#endregion muted

	//#region played

	var testAudioElementplayedTestItems = new Array<any>();
	
	//#region Initialize TestItems


	//#endregion Initialize TestItems

	var testAudioElementplayed = new TestProperty('played', 'played', 'TimeRanges', testAudioElementplayedTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementplayed);

	//#endregion played

	//#region preload

	var testAudioElementpreloadTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementpreloadTestItems.add('none');
	testAudioElementpreloadTestItems.add('metadata');
	testAudioElementpreloadTestItems.add('auto');

	//#endregion Initialize TestItems

	var testAudioElementpreload = new TestProperty('preload', 'preload', 'string', testAudioElementpreloadTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementpreload);

	//#endregion preload

	//#region source

	var testAudioElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementsourceTestItems.add('http://www.google.com/');
	testAudioElementsourceTestItems.add('http://www.yahoo.com/');
	testAudioElementsourceTestItems.add('http://www.msn.com/');
	testAudioElementsourceTestItems.add('http://www.aol.com/');
	testAudioElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testAudioElementsource = new TestProperty('source', 'src', 'string', testAudioElementsourceTestItems, "", true, false);
	propertiesAudioElement.add(testAudioElementsource);

	//#endregion source

	//#region volume

	var testAudioElementvolumeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testAudioElementvolumeTestItems.add(0);
	testAudioElementvolumeTestItems.add(0.4);
	testAudioElementvolumeTestItems.add(0.222334);
	testAudioElementvolumeTestItems.add(0.1);
	testAudioElementvolumeTestItems.add(1);

	//#endregion Initialize TestItems

	var testAudioElementvolume = new TestProperty('volume', 'volume', 'number', testAudioElementvolumeTestItems, "", true, true);
	propertiesAudioElement.add(testAudioElementvolume);

	//#endregion volume

	//#endregion Initialize Properties

	var testAudioElement = new TestElement('AudioElement', 'audio', 'audio', propertiesAudioElement);
	elements.add(testAudioElement);

	//#endregion AudioElement

	//#region BaseElement

	var propertiesBaseElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region href

	var testBaseElementhrefTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testBaseElementhrefTestItems.add('http://www.google.com/');
	testBaseElementhrefTestItems.add('http://www.yahoo.com/');
	testBaseElementhrefTestItems.add('http://www.msn.com/');
	testBaseElementhrefTestItems.add('http://www.aol.com/');
	testBaseElementhrefTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testBaseElementhref = new TestProperty('href', 'href', 'string', testBaseElementhrefTestItems, "", true, false);
	propertiesBaseElement.add(testBaseElementhref);

	//#endregion href

	//#region target

	var testBaseElementtargetTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testBaseElementtargetTestItems.add('_self');
	testBaseElementtargetTestItems.add('_blank');
	testBaseElementtargetTestItems.add('_parent');
	testBaseElementtargetTestItems.add('_top');

	//#endregion Initialize TestItems

	var testBaseElementtarget = new TestProperty('target', 'target', 'string', testBaseElementtargetTestItems, "", true, false);
	propertiesBaseElement.add(testBaseElementtarget);

	//#endregion target

	//#endregion Initialize Properties

	var testBaseElement = new TestElement('BaseElement', 'base', 'base', propertiesBaseElement);
	elements.add(testBaseElement);

	//#endregion BaseElement

	//#region BidirectionalIsolationElement

	var propertiesBidirectionalIsolationElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testBidirectionalIsolationElement = new TestElement('BidirectionalIsolationElement', 'bdi', 'bdi', propertiesBidirectionalIsolationElement);
	elements.add(testBidirectionalIsolationElement);

	//#endregion BidirectionalIsolationElement

	//#region BidirectionalOverrideElement

	var propertiesBidirectionalOverrideElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testBidirectionalOverrideElement = new TestElement('BidirectionalOverrideElement', 'bdo', 'bdo', propertiesBidirectionalOverrideElement);
	elements.add(testBidirectionalOverrideElement);

	//#endregion BidirectionalOverrideElement

	//#region BlockQuotationElement

	var propertiesBlockQuotationElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region citation

	var testBlockQuotationElementcitationTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testBlockQuotationElementcitationTestItems.add('http://www.google.com/');
	testBlockQuotationElementcitationTestItems.add('http://www.yahoo.com/');
	testBlockQuotationElementcitationTestItems.add('http://www.msn.com/');
	testBlockQuotationElementcitationTestItems.add('http://www.aol.com/');
	testBlockQuotationElementcitationTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testBlockQuotationElementcitation = new TestProperty('citation', 'cite', 'string', testBlockQuotationElementcitationTestItems, "", true, false);
	propertiesBlockQuotationElement.add(testBlockQuotationElementcitation);

	//#endregion citation

	//#endregion Initialize Properties

	var testBlockQuotationElement = new TestElement('BlockQuotationElement', 'blockquote', 'blockquote', propertiesBlockQuotationElement);
	elements.add(testBlockQuotationElement);

	//#endregion BlockQuotationElement

	//#region BodyElement

	var propertiesBodyElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testBodyElement = new TestElement('BodyElement', 'body', 'body', propertiesBodyElement);
	elements.add(testBodyElement);

	//#endregion BodyElement

	//#region BoldElement

	var propertiesBoldElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testBoldElement = new TestElement('BoldElement', 'b', 'b', propertiesBoldElement);
	elements.add(testBoldElement);

	//#endregion BoldElement

	//#region ButtonElement

	var propertiesButtonElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region autoFocus

	var testButtonElementautoFocusTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testButtonElementautoFocusTestItems.add(true);
	testButtonElementautoFocusTestItems.add(false);

	//#endregion Initialize TestItems

	var testButtonElementautoFocus = new TestProperty('autoFocus', 'autofocus', 'boolean', testButtonElementautoFocusTestItems, "", true, false);
	propertiesButtonElement.add(testButtonElementautoFocus);

	//#endregion autoFocus

	//#region disabled

	var testButtonElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testButtonElementdisabledTestItems.add(true);
	testButtonElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testButtonElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testButtonElementdisabledTestItems, "", true, false);
	propertiesButtonElement.add(testButtonElementdisabled);

	//#endregion disabled

	//#region name

	var testButtonElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testButtonElementnameTestItems.add('');
	testButtonElementnameTestItems.add('234567');
	testButtonElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testButtonElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testButtonElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testButtonElementname = new TestProperty('name', 'name', 'string', testButtonElementnameTestItems, "", true, false);
	propertiesButtonElement.add(testButtonElementname);

	//#endregion name

	//#region type

	var testButtonElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testButtonElementtypeTestItems.add('submit');
	testButtonElementtypeTestItems.add('reset');
	testButtonElementtypeTestItems.add('button');

	//#endregion Initialize TestItems

	var testButtonElementtype = new TestProperty('type', 'type', 'string', testButtonElementtypeTestItems, "", true, false);
	propertiesButtonElement.add(testButtonElementtype);

	//#endregion type

	//#region value

	var testButtonElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testButtonElementvalueTestItems.add('');
	testButtonElementvalueTestItems.add('234567');
	testButtonElementvalueTestItems.add('Testing a long sentence just in case the property does not support it.');
	testButtonElementvalueTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testButtonElementvalueTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testButtonElementvalue = new TestProperty('value', 'value', 'string', testButtonElementvalueTestItems, "", true, false);
	propertiesButtonElement.add(testButtonElementvalue);

	//#endregion value

	//#endregion Initialize Properties

	var testButtonElement = new TestElement('ButtonElement', 'button', 'button', propertiesButtonElement);
	elements.add(testButtonElement);

	//#endregion ButtonElement

	//#region CanvasElement

	var propertiesCanvasElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region width

	var testCanvasElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testCanvasElementwidthTestItems.add(100);
	testCanvasElementwidthTestItems.add(500);
	testCanvasElementwidthTestItems.add(600);
	testCanvasElementwidthTestItems.add(250);
	testCanvasElementwidthTestItems.add(400);

	//#endregion Initialize TestItems

	var testCanvasElementwidth = new TestProperty('width', 'width', 'number', testCanvasElementwidthTestItems, "", true, false);
	propertiesCanvasElement.add(testCanvasElementwidth);

	//#endregion width

	//#region height

	var testCanvasElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testCanvasElementheightTestItems.add(100);
	testCanvasElementheightTestItems.add(500);
	testCanvasElementheightTestItems.add(600);
	testCanvasElementheightTestItems.add(250);
	testCanvasElementheightTestItems.add(400);

	//#endregion Initialize TestItems

	var testCanvasElementheight = new TestProperty('height', 'height', 'number', testCanvasElementheightTestItems, "", true, false);
	propertiesCanvasElement.add(testCanvasElementheight);

	//#endregion height

	//#endregion Initialize Properties

	var testCanvasElement = new TestElement('CanvasElement', 'canvas', 'canvas', propertiesCanvasElement);
	elements.add(testCanvasElement);

	//#endregion CanvasElement

	//#region CitationElement

	var propertiesCitationElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testCitationElement = new TestElement('CitationElement', 'cite', 'cite', propertiesCitationElement);
	elements.add(testCitationElement);

	//#endregion CitationElement

	//#region CodeElement

	var propertiesCodeElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testCodeElement = new TestElement('CodeElement', 'code', 'code', propertiesCodeElement);
	elements.add(testCodeElement);

	//#endregion CodeElement

	//#region DataElement

	var propertiesDataElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region value

	var testDataElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems


	//#endregion Initialize TestItems

	var testDataElementvalue = new TestProperty('value', 'nodeValue', 'string', testDataElementvalueTestItems, "", true, false);
	propertiesDataElement.add(testDataElementvalue);

	//#endregion value

	//#endregion Initialize Properties

	var testDataElement = new TestElement('DataElement', 'data', 'data', propertiesDataElement);
	elements.add(testDataElement);

	//#endregion DataElement

	//#region DataListElement

	var propertiesDataListElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDataListElement = new TestElement('DataListElement', 'datalist', 'datalist', propertiesDataListElement);
	elements.add(testDataListElement);

	//#endregion DataListElement

	//#region DefinitionElement

	var propertiesDefinitionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDefinitionElement = new TestElement('DefinitionElement', 'dfn', 'dfn', propertiesDefinitionElement);
	elements.add(testDefinitionElement);

	//#endregion DefinitionElement

	//#region DefinitionTermElement

	var propertiesDefinitionTermElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDefinitionTermElement = new TestElement('DefinitionTermElement', 'dt', 'dt', propertiesDefinitionTermElement);
	elements.add(testDefinitionTermElement);

	//#endregion DefinitionTermElement

	//#region DeletedTextElement

	var propertiesDeletedTextElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region citation

	var testDeletedTextElementcitationTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testDeletedTextElementcitationTestItems.add('http://www.google.com/');
	testDeletedTextElementcitationTestItems.add('http://www.yahoo.com/');
	testDeletedTextElementcitationTestItems.add('http://www.msn.com/');
	testDeletedTextElementcitationTestItems.add('http://www.aol.com/');
	testDeletedTextElementcitationTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testDeletedTextElementcitation = new TestProperty('citation', 'cite', 'string', testDeletedTextElementcitationTestItems, "", true, false);
	propertiesDeletedTextElement.add(testDeletedTextElementcitation);

	//#endregion citation

	//#endregion Initialize Properties

	var testDeletedTextElement = new TestElement('DeletedTextElement', 'del', 'del', propertiesDeletedTextElement);
	elements.add(testDeletedTextElement);

	//#endregion DeletedTextElement

	//#region DescriptionElement

	var propertiesDescriptionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDescriptionElement = new TestElement('DescriptionElement', 'dd', 'dd', propertiesDescriptionElement);
	elements.add(testDescriptionElement);

	//#endregion DescriptionElement

	//#region DescriptionListElement

	var propertiesDescriptionListElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDescriptionListElement = new TestElement('DescriptionListElement', 'dl', 'dl', propertiesDescriptionListElement);
	elements.add(testDescriptionListElement);

	//#endregion DescriptionListElement

	//#region DetailsElement

	var propertiesDetailsElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDetailsElement = new TestElement('DetailsElement', 'details', 'details', propertiesDetailsElement);
	elements.add(testDetailsElement);

	//#endregion DetailsElement

	//#region DivisionElement

	var propertiesDivisionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testDivisionElement = new TestElement('DivisionElement', 'div', 'div', propertiesDivisionElement);
	elements.add(testDivisionElement);

	//#endregion DivisionElement

	//#region EmbedElement

	var propertiesEmbedElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region height

	var testEmbedElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbedElementheightTestItems.add('');
	testEmbedElementheightTestItems.add('234567');
	testEmbedElementheightTestItems.add('Testing a long sentence just in case the property does not support it.');
	testEmbedElementheightTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testEmbedElementheightTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testEmbedElementheight = new TestProperty('height', 'height', 'string', testEmbedElementheightTestItems, "", true, false);
	propertiesEmbedElement.add(testEmbedElementheight);

	//#endregion height

	//#region source

	var testEmbedElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbedElementsourceTestItems.add('http://www.google.com/');
	testEmbedElementsourceTestItems.add('http://www.yahoo.com/');
	testEmbedElementsourceTestItems.add('http://www.msn.com/');
	testEmbedElementsourceTestItems.add('http://www.aol.com/');
	testEmbedElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testEmbedElementsource = new TestProperty('source', 'src', 'string', testEmbedElementsourceTestItems, "", true, false);
	propertiesEmbedElement.add(testEmbedElementsource);

	//#endregion source

	//#region width

	var testEmbedElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbedElementwidthTestItems.add('');
	testEmbedElementwidthTestItems.add('234567');
	testEmbedElementwidthTestItems.add('Testing a long sentence just in case the property does not support it.');
	testEmbedElementwidthTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testEmbedElementwidthTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testEmbedElementwidth = new TestProperty('width', 'width', 'string', testEmbedElementwidthTestItems, "", true, false);
	propertiesEmbedElement.add(testEmbedElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testEmbedElement = new TestElement('EmbedElement', 'embed', 'embed', propertiesEmbedElement);
	elements.add(testEmbedElement);

	//#endregion EmbedElement

	//#region EmbeddedObjectElement

	var propertiesEmbeddedObjectElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region data

	var testEmbeddedObjectElementdataTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbeddedObjectElementdataTestItems.add('http://www.google.com/');
	testEmbeddedObjectElementdataTestItems.add('http://www.yahoo.com/');
	testEmbeddedObjectElementdataTestItems.add('http://www.msn.com/');
	testEmbeddedObjectElementdataTestItems.add('http://www.aol.com/');
	testEmbeddedObjectElementdataTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testEmbeddedObjectElementdata = new TestProperty('data', 'data', 'string', testEmbeddedObjectElementdataTestItems, "", true, false);
	propertiesEmbeddedObjectElement.add(testEmbeddedObjectElementdata);

	//#endregion data

	//#region height

	var testEmbeddedObjectElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbeddedObjectElementheightTestItems.add('');
	testEmbeddedObjectElementheightTestItems.add('234567');
	testEmbeddedObjectElementheightTestItems.add('Testing a long sentence just in case the property does not support it.');
	testEmbeddedObjectElementheightTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testEmbeddedObjectElementheightTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testEmbeddedObjectElementheight = new TestProperty('height', 'height', 'string', testEmbeddedObjectElementheightTestItems, "", true, false);
	propertiesEmbeddedObjectElement.add(testEmbeddedObjectElementheight);

	//#endregion height

	//#region name

	var testEmbeddedObjectElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbeddedObjectElementnameTestItems.add('');
	testEmbeddedObjectElementnameTestItems.add('234567');
	testEmbeddedObjectElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testEmbeddedObjectElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testEmbeddedObjectElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testEmbeddedObjectElementname = new TestProperty('name', 'name', 'string', testEmbeddedObjectElementnameTestItems, "", true, false);
	propertiesEmbeddedObjectElement.add(testEmbeddedObjectElementname);

	//#endregion name

	//#region type

	var testEmbeddedObjectElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbeddedObjectElementtypeTestItems.add('');
	testEmbeddedObjectElementtypeTestItems.add('234567');
	testEmbeddedObjectElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testEmbeddedObjectElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testEmbeddedObjectElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testEmbeddedObjectElementtype = new TestProperty('type', 'type', 'string', testEmbeddedObjectElementtypeTestItems, "", true, false);
	propertiesEmbeddedObjectElement.add(testEmbeddedObjectElementtype);

	//#endregion type

	//#region width

	var testEmbeddedObjectElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testEmbeddedObjectElementwidthTestItems.add('');
	testEmbeddedObjectElementwidthTestItems.add('234567');
	testEmbeddedObjectElementwidthTestItems.add('Testing a long sentence just in case the property does not support it.');
	testEmbeddedObjectElementwidthTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testEmbeddedObjectElementwidthTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testEmbeddedObjectElementwidth = new TestProperty('width', 'width', 'string', testEmbeddedObjectElementwidthTestItems, "", true, false);
	propertiesEmbeddedObjectElement.add(testEmbeddedObjectElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testEmbeddedObjectElement = new TestElement('EmbeddedObjectElement', 'object', 'obj', propertiesEmbeddedObjectElement);
	elements.add(testEmbeddedObjectElement);

	//#endregion EmbeddedObjectElement

	//#region EmphasisElement

	var propertiesEmphasisElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testEmphasisElement = new TestElement('EmphasisElement', 'em', 'em', propertiesEmphasisElement);
	elements.add(testEmphasisElement);

	//#endregion EmphasisElement

	//#region FieldsetElement

	var propertiesFieldsetElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region disabled

	var testFieldsetElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFieldsetElementdisabledTestItems.add(true);
	testFieldsetElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testFieldsetElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testFieldsetElementdisabledTestItems, "", true, false);
	propertiesFieldsetElement.add(testFieldsetElementdisabled);

	//#endregion disabled

	//#endregion Initialize Properties

	var testFieldsetElement = new TestElement('FieldsetElement', 'fieldset', 'fieldset', propertiesFieldsetElement);
	elements.add(testFieldsetElement);

	//#endregion FieldsetElement

	//#region FigureElement

	var propertiesFigureElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testFigureElement = new TestElement('FigureElement', 'figure', 'figure', propertiesFigureElement);
	elements.add(testFigureElement);

	//#endregion FigureElement

	//#region FigureCaptionElement

	var propertiesFigureCaptionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testFigureCaptionElement = new TestElement('FigureCaptionElement', 'figcaption', 'figcaption', propertiesFigureCaptionElement);
	elements.add(testFigureCaptionElement);

	//#endregion FigureCaptionElement

	//#region FooterElement

	var propertiesFooterElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testFooterElement = new TestElement('FooterElement', 'footer', 'footer', propertiesFooterElement);
	elements.add(testFooterElement);

	//#endregion FooterElement

	//#region FormElement

	var propertiesFormElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region acceptCharset

	var testFormElementacceptCharsetTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementacceptCharsetTestItems.add('');
	testFormElementacceptCharsetTestItems.add('234567');
	testFormElementacceptCharsetTestItems.add('Testing a long sentence just in case the property does not support it.');
	testFormElementacceptCharsetTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testFormElementacceptCharsetTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testFormElementacceptCharset = new TestProperty('acceptCharset', 'acceptCharset', 'string', testFormElementacceptCharsetTestItems, "", true, false);
	propertiesFormElement.add(testFormElementacceptCharset);

	//#endregion acceptCharset

	//#region action

	var testFormElementactionTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementactionTestItems.add('http://www.google.com/');
	testFormElementactionTestItems.add('http://www.yahoo.com/');
	testFormElementactionTestItems.add('http://www.msn.com/');
	testFormElementactionTestItems.add('http://www.aol.com/');
	testFormElementactionTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testFormElementaction = new TestProperty('action', 'action', 'string', testFormElementactionTestItems, "", true, false);
	propertiesFormElement.add(testFormElementaction);

	//#endregion action

	//#region autoComplete

	var testFormElementautoCompleteTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementautoCompleteTestItems.add('off');
	testFormElementautoCompleteTestItems.add('on');

	//#endregion Initialize TestItems

	var testFormElementautoComplete = new TestProperty('autoComplete', 'autocomplete', 'string', testFormElementautoCompleteTestItems, "", true, false);
	propertiesFormElement.add(testFormElementautoComplete);

	//#endregion autoComplete

	//#region encodingType

	var testFormElementencodingTypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementencodingTypeTestItems.add('application/x-www-form-urlencoded');
	testFormElementencodingTypeTestItems.add('multipart/form-data');
	testFormElementencodingTypeTestItems.add('text/plain');

	//#endregion Initialize TestItems

	var testFormElementencodingType = new TestProperty('encodingType', 'enctype', 'string', testFormElementencodingTypeTestItems, "", true, false);
	propertiesFormElement.add(testFormElementencodingType);

	//#endregion encodingType

	//#region method

	var testFormElementmethodTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementmethodTestItems.add('post');
	testFormElementmethodTestItems.add('get');

	//#endregion Initialize TestItems

	var testFormElementmethod = new TestProperty('method', 'method', 'string', testFormElementmethodTestItems, "", true, false);
	propertiesFormElement.add(testFormElementmethod);

	//#endregion method

	//#region name

	var testFormElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementnameTestItems.add('');
	testFormElementnameTestItems.add('234567');
	testFormElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testFormElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testFormElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testFormElementname = new TestProperty('name', 'name', 'string', testFormElementnameTestItems, "", true, false);
	propertiesFormElement.add(testFormElementname);

	//#endregion name

	//#region target

	var testFormElementtargetTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testFormElementtargetTestItems.add('_self');
	testFormElementtargetTestItems.add('_blank');
	testFormElementtargetTestItems.add('_parent');
	testFormElementtargetTestItems.add('_top');

	//#endregion Initialize TestItems

	var testFormElementtarget = new TestProperty('target', 'target', 'string', testFormElementtargetTestItems, "", true, false);
	propertiesFormElement.add(testFormElementtarget);

	//#endregion target

	//#endregion Initialize Properties

	var testFormElement = new TestElement('FormElement', 'form', 'form', propertiesFormElement);
	elements.add(testFormElement);

	//#endregion FormElement

	//#region HeadElement

	var propertiesHeadElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeadElement = new TestElement('HeadElement', 'head', 'head', propertiesHeadElement);
	elements.add(testHeadElement);

	//#endregion HeadElement

	//#region HeaderElement

	var propertiesHeaderElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderElement = new TestElement('HeaderElement', 'header', 'header', propertiesHeaderElement);
	elements.add(testHeaderElement);

	//#endregion HeaderElement

	//#region HeaderFiveElement

	var propertiesHeaderFiveElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderFiveElement = new TestElement('HeaderFiveElement', 'h5', 'h5', propertiesHeaderFiveElement);
	elements.add(testHeaderFiveElement);

	//#endregion HeaderFiveElement

	//#region HeaderFourElement

	var propertiesHeaderFourElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderFourElement = new TestElement('HeaderFourElement', 'h4', 'h4', propertiesHeaderFourElement);
	elements.add(testHeaderFourElement);

	//#endregion HeaderFourElement

	//#region HeaderOneElement

	var propertiesHeaderOneElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderOneElement = new TestElement('HeaderOneElement', 'h1', 'h1', propertiesHeaderOneElement);
	elements.add(testHeaderOneElement);

	//#endregion HeaderOneElement

	//#region HeaderSixElement

	var propertiesHeaderSixElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderSixElement = new TestElement('HeaderSixElement', 'h6', 'h6', propertiesHeaderSixElement);
	elements.add(testHeaderSixElement);

	//#endregion HeaderSixElement

	//#region HeaderThreeElement

	var propertiesHeaderThreeElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderThreeElement = new TestElement('HeaderThreeElement', 'h3', 'h3', propertiesHeaderThreeElement);
	elements.add(testHeaderThreeElement);

	//#endregion HeaderThreeElement

	//#region HeaderTwoElement

	var propertiesHeaderTwoElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHeaderTwoElement = new TestElement('HeaderTwoElement', 'h2', 'h2', propertiesHeaderTwoElement);
	elements.add(testHeaderTwoElement);

	//#endregion HeaderTwoElement

	//#region HorizontalRuleElement

	var propertiesHorizontalRuleElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testHorizontalRuleElement = new TestElement('HorizontalRuleElement', 'hr', 'hr', propertiesHorizontalRuleElement);
	elements.add(testHorizontalRuleElement);

	//#endregion HorizontalRuleElement

	//#region ImageElement

	var propertiesImageElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region alternate

	var testImageElementalternateTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testImageElementalternateTestItems.add('');
	testImageElementalternateTestItems.add('234567');
	testImageElementalternateTestItems.add('Testing a long sentence just in case the property does not support it.');
	testImageElementalternateTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testImageElementalternateTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testImageElementalternate = new TestProperty('alternate', 'alt', 'string', testImageElementalternateTestItems, "", true, false);
	propertiesImageElement.add(testImageElementalternate);

	//#endregion alternate

	//#region height

	var testImageElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testImageElementheightTestItems.add(100);
	testImageElementheightTestItems.add(500);
	testImageElementheightTestItems.add(600);
	testImageElementheightTestItems.add(250);
	testImageElementheightTestItems.add(300);

	//#endregion Initialize TestItems

	var testImageElementheight = new TestProperty('height', 'height', 'number', testImageElementheightTestItems, "", true, false);
	propertiesImageElement.add(testImageElementheight);

	//#endregion height

	//#region longDescription

	var testImageElementlongDescriptionTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testImageElementlongDescriptionTestItems.add('http://www.google.com/');
	testImageElementlongDescriptionTestItems.add('http://www.yahoo.com/');
	testImageElementlongDescriptionTestItems.add('http://www.msn.com/');
	testImageElementlongDescriptionTestItems.add('http://www.aol.com/');
	testImageElementlongDescriptionTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testImageElementlongDescription = new TestProperty('longDescription', 'longDesc', 'string', testImageElementlongDescriptionTestItems, "", true, false);
	propertiesImageElement.add(testImageElementlongDescription);

	//#endregion longDescription

	//#region source

	var testImageElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testImageElementsourceTestItems.add('http://www.google.com/');
	testImageElementsourceTestItems.add('http://www.yahoo.com/');
	testImageElementsourceTestItems.add('http://www.msn.com/');
	testImageElementsourceTestItems.add('http://www.aol.com/');
	testImageElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testImageElementsource = new TestProperty('source', 'src', 'string', testImageElementsourceTestItems, "", true, false);
	propertiesImageElement.add(testImageElementsource);

	//#endregion source

	//#region width

	var testImageElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testImageElementwidthTestItems.add(100);
	testImageElementwidthTestItems.add(500);
	testImageElementwidthTestItems.add(600);
	testImageElementwidthTestItems.add(250);
	testImageElementwidthTestItems.add(300);

	//#endregion Initialize TestItems

	var testImageElementwidth = new TestProperty('width', 'width', 'number', testImageElementwidthTestItems, "", true, false);
	propertiesImageElement.add(testImageElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testImageElement = new TestElement('ImageElement', 'img', 'img', propertiesImageElement);
	elements.add(testImageElement);

	//#endregion ImageElement

	//#region InlineFrameElement

	var propertiesInlineFrameElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region height

	var testInlineFrameElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInlineFrameElementheightTestItems.add('');
	testInlineFrameElementheightTestItems.add('234567');
	testInlineFrameElementheightTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInlineFrameElementheightTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInlineFrameElementheightTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInlineFrameElementheight = new TestProperty('height', 'height', 'string', testInlineFrameElementheightTestItems, "", true, false);
	propertiesInlineFrameElement.add(testInlineFrameElementheight);

	//#endregion height

	//#region name

	var testInlineFrameElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInlineFrameElementnameTestItems.add('');
	testInlineFrameElementnameTestItems.add('234567');
	testInlineFrameElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInlineFrameElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInlineFrameElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInlineFrameElementname = new TestProperty('name', 'name', 'string', testInlineFrameElementnameTestItems, "", true, false);
	propertiesInlineFrameElement.add(testInlineFrameElementname);

	//#endregion name

	//#region scrolling

	var testInlineFrameElementscrollingTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInlineFrameElementscrollingTestItems.add('auto');
	testInlineFrameElementscrollingTestItems.add('yes');
	testInlineFrameElementscrollingTestItems.add('no');

	//#endregion Initialize TestItems

	var testInlineFrameElementscrolling = new TestProperty('scrolling', 'scrolling', 'string', testInlineFrameElementscrollingTestItems, "", true, false);
	propertiesInlineFrameElement.add(testInlineFrameElementscrolling);

	//#endregion scrolling

	//#region source

	var testInlineFrameElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInlineFrameElementsourceTestItems.add('http://www.google.com/');
	testInlineFrameElementsourceTestItems.add('http://www.yahoo.com/');
	testInlineFrameElementsourceTestItems.add('http://www.msn.com/');
	testInlineFrameElementsourceTestItems.add('http://www.aol.com/');
	testInlineFrameElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testInlineFrameElementsource = new TestProperty('source', 'src', 'string', testInlineFrameElementsourceTestItems, "", true, false);
	propertiesInlineFrameElement.add(testInlineFrameElementsource);

	//#endregion source

	//#region width

	var testInlineFrameElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInlineFrameElementwidthTestItems.add('');
	testInlineFrameElementwidthTestItems.add('234567');
	testInlineFrameElementwidthTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInlineFrameElementwidthTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInlineFrameElementwidthTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInlineFrameElementwidth = new TestProperty('width', 'width', 'string', testInlineFrameElementwidthTestItems, "", true, false);
	propertiesInlineFrameElement.add(testInlineFrameElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testInlineFrameElement = new TestElement('InlineFrameElement', 'iframe', 'iframe', propertiesInlineFrameElement);
	elements.add(testInlineFrameElement);

	//#endregion InlineFrameElement

	//#region InputElement

	var propertiesInputElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region type

	var testInputElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementtypeTestItems.add('button');
	testInputElementtypeTestItems.add('checkbox');
	testInputElementtypeTestItems.add('color');
	testInputElementtypeTestItems.add('email');
	testInputElementtypeTestItems.add('hidden');
	testInputElementtypeTestItems.add('image');
	testInputElementtypeTestItems.add('number');
	testInputElementtypeTestItems.add('password');
	testInputElementtypeTestItems.add('radio');
	testInputElementtypeTestItems.add('range');
	testInputElementtypeTestItems.add('reset');
	testInputElementtypeTestItems.add('search');
	testInputElementtypeTestItems.add('submit');
	testInputElementtypeTestItems.add('tel');
	testInputElementtypeTestItems.add('text');
	testInputElementtypeTestItems.add('url');

	//#endregion Initialize TestItems

	var testInputElementtype = new TestProperty('type', 'type', 'string', testInputElementtypeTestItems, "", true, false);
	propertiesInputElement.add(testInputElementtype);

	//#endregion type

	//#region accept

	var testInputElementacceptTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementacceptTestItems.add('audio/*');
	testInputElementacceptTestItems.add('video/*');
	testInputElementacceptTestItems.add('image/*');

	//#endregion Initialize TestItems

	var testInputElementaccept = new TestProperty('accept', 'accept', 'string', testInputElementacceptTestItems, "", true, false);
	propertiesInputElement.add(testInputElementaccept);

	//#endregion accept

	//#region autoComplete

	var testInputElementautoCompleteTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementautoCompleteTestItems.add('off');
	testInputElementautoCompleteTestItems.add('on');

	//#endregion Initialize TestItems

	var testInputElementautoComplete = new TestProperty('autoComplete', 'autocomplete', 'string', testInputElementautoCompleteTestItems, "", true, false);
	propertiesInputElement.add(testInputElementautoComplete);

	//#endregion autoComplete

	//#region autoFocus

	var testInputElementautoFocusTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementautoFocusTestItems.add(true);
	testInputElementautoFocusTestItems.add(false);

	//#endregion Initialize TestItems

	var testInputElementautoFocus = new TestProperty('autoFocus', 'autofocus', 'boolean', testInputElementautoFocusTestItems, "", true, false);
	propertiesInputElement.add(testInputElementautoFocus);

	//#endregion autoFocus

	//#region checked

	var testInputElementcheckedTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementcheckedTestItems.add(true);
	testInputElementcheckedTestItems.add(false);

	//#endregion Initialize TestItems

	var testInputElementchecked = new TestProperty('checked', 'checked', 'boolean', testInputElementcheckedTestItems, "element.element.style.opacity = 0; document.body.appendChild(element.element); element.type='radio';", true, true);
	propertiesInputElement.add(testInputElementchecked);

	//#endregion checked

	//#region disabled

	var testInputElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementdisabledTestItems.add(true);
	testInputElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testInputElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testInputElementdisabledTestItems, "", true, false);
	propertiesInputElement.add(testInputElementdisabled);

	//#endregion disabled

	//#region height

	var testInputElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementheightTestItems.add(0);

	//#endregion Initialize TestItems

	var testInputElementheight = new TestProperty('height', 'height', 'number', testInputElementheightTestItems, "", true, false);
	propertiesInputElement.add(testInputElementheight);

	//#endregion height

	//#region max

	var testInputElementmaxTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementmaxTestItems.add('');
	testInputElementmaxTestItems.add('234567');
	testInputElementmaxTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementmaxTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementmaxTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementmax = new TestProperty('max', 'max', 'string', testInputElementmaxTestItems, "", true, false);
	propertiesInputElement.add(testInputElementmax);

	//#endregion max

	//#region min

	var testInputElementminTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementminTestItems.add('');
	testInputElementminTestItems.add('234567');
	testInputElementminTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementminTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementminTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementmin = new TestProperty('min', 'min', 'string', testInputElementminTestItems, "", true, false);
	propertiesInputElement.add(testInputElementmin);

	//#endregion min

	//#region multiple

	var testInputElementmultipleTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementmultipleTestItems.add(true);
	testInputElementmultipleTestItems.add(false);

	//#endregion Initialize TestItems

	var testInputElementmultiple = new TestProperty('multiple', 'multiple', 'boolean', testInputElementmultipleTestItems, "element.element.style.opacity = 0; document.body.appendChild(element.element); element.type='email';", true, true);
	propertiesInputElement.add(testInputElementmultiple);

	//#endregion multiple

	//#region name

	var testInputElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementnameTestItems.add('');
	testInputElementnameTestItems.add('234567');
	testInputElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementname = new TestProperty('name', 'name', 'string', testInputElementnameTestItems, "", true, false);
	propertiesInputElement.add(testInputElementname);

	//#endregion name

	//#region pattern

	var testInputElementpatternTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementpatternTestItems.add('');
	testInputElementpatternTestItems.add('234567');
	testInputElementpatternTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementpatternTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementpatternTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementpattern = new TestProperty('pattern', 'pattern', 'string', testInputElementpatternTestItems, "", true, false);
	propertiesInputElement.add(testInputElementpattern);

	//#endregion pattern

	//#region placeHolder

	var testInputElementplaceHolderTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementplaceHolderTestItems.add('');
	testInputElementplaceHolderTestItems.add('234567');
	testInputElementplaceHolderTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementplaceHolderTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementplaceHolderTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementplaceHolder = new TestProperty('placeHolder', 'placeholder', 'string', testInputElementplaceHolderTestItems, "", true, false);
	propertiesInputElement.add(testInputElementplaceHolder);

	//#endregion placeHolder

	//#region required

	var testInputElementrequiredTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementrequiredTestItems.add(true);
	testInputElementrequiredTestItems.add(false);

	//#endregion Initialize TestItems

	var testInputElementrequired = new TestProperty('required', 'required', 'boolean', testInputElementrequiredTestItems, "", true, false);
	propertiesInputElement.add(testInputElementrequired);

	//#endregion required

	//#region size

	var testInputElementsizeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementsizeTestItems.add(100);
	testInputElementsizeTestItems.add(500);
	testInputElementsizeTestItems.add(600);
	testInputElementsizeTestItems.add(250);
	testInputElementsizeTestItems.add(300);

	//#endregion Initialize TestItems

	var testInputElementsize = new TestProperty('size', 'size', 'number', testInputElementsizeTestItems, "", true, false);
	propertiesInputElement.add(testInputElementsize);

	//#endregion size

	//#region source

	var testInputElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementsourceTestItems.add('http://www.google.com/');
	testInputElementsourceTestItems.add('http://www.yahoo.com/');
	testInputElementsourceTestItems.add('http://www.msn.com/');
	testInputElementsourceTestItems.add('http://www.aol.com/');
	testInputElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testInputElementsource = new TestProperty('source', 'src', 'string', testInputElementsourceTestItems, "", true, false);
	propertiesInputElement.add(testInputElementsource);

	//#endregion source

	//#region step

	var testInputElementstepTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementstepTestItems.add('');
	testInputElementstepTestItems.add('234567');
	testInputElementstepTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementstepTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementstepTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementstep = new TestProperty('step', 'step', 'string', testInputElementstepTestItems, "", true, false);
	propertiesInputElement.add(testInputElementstep);

	//#endregion step

	//#region value

	var testInputElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementvalueTestItems.add('');
	testInputElementvalueTestItems.add('234567');
	testInputElementvalueTestItems.add('Testing a long sentence just in case the property does not support it.');
	testInputElementvalueTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testInputElementvalueTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testInputElementvalue = new TestProperty('value', 'value', 'string', testInputElementvalueTestItems, "", true, true);
	propertiesInputElement.add(testInputElementvalue);

	//#endregion value

	//#region width

	var testInputElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInputElementwidthTestItems.add(0);

	//#endregion Initialize TestItems

	var testInputElementwidth = new TestProperty('width', 'width', 'number', testInputElementwidthTestItems, "", true, false);
	propertiesInputElement.add(testInputElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testInputElement = new TestElement('InputElement', 'input', 'input', propertiesInputElement);
	elements.add(testInputElement);

	//#endregion InputElement

	//#region InsertedElement

	var propertiesInsertedElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region citation

	var testInsertedElementcitationTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testInsertedElementcitationTestItems.add('http://www.google.com/');
	testInsertedElementcitationTestItems.add('http://www.yahoo.com/');
	testInsertedElementcitationTestItems.add('http://www.msn.com/');
	testInsertedElementcitationTestItems.add('http://www.aol.com/');
	testInsertedElementcitationTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testInsertedElementcitation = new TestProperty('citation', 'cite', 'string', testInsertedElementcitationTestItems, "", true, false);
	propertiesInsertedElement.add(testInsertedElementcitation);

	//#endregion citation

	//#endregion Initialize Properties

	var testInsertedElement = new TestElement('InsertedElement', 'ins', 'ins', propertiesInsertedElement);
	elements.add(testInsertedElement);

	//#endregion InsertedElement

	//#region ItalicElement

	var propertiesItalicElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testItalicElement = new TestElement('ItalicElement', 'i', 'i', propertiesItalicElement);
	elements.add(testItalicElement);

	//#endregion ItalicElement

	//#region KeyboardInputElement

	var propertiesKeyboardInputElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testKeyboardInputElement = new TestElement('KeyboardInputElement', 'kbd', 'kbd', propertiesKeyboardInputElement);
	elements.add(testKeyboardInputElement);

	//#endregion KeyboardInputElement

	//#region LabelElement

	var propertiesLabelElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testLabelElement = new TestElement('LabelElement', 'label', 'label', propertiesLabelElement);
	elements.add(testLabelElement);

	//#endregion LabelElement

	//#region LegendFieldElement

	var propertiesLegendFieldElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testLegendFieldElement = new TestElement('LegendFieldElement', 'legend', 'legend', propertiesLegendFieldElement);
	elements.add(testLegendFieldElement);

	//#endregion LegendFieldElement

	//#region LineBreakElement

	var propertiesLineBreakElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testLineBreakElement = new TestElement('LineBreakElement', 'br', 'br', propertiesLineBreakElement);
	elements.add(testLineBreakElement);

	//#endregion LineBreakElement

	//#region LinkElement

	var propertiesLinkElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region characterSet

	var testLinkElementcharacterSetTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementcharacterSetTestItems.add('');
	testLinkElementcharacterSetTestItems.add('234567');
	testLinkElementcharacterSetTestItems.add('Testing a long sentence just in case the property does not support it.');
	testLinkElementcharacterSetTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testLinkElementcharacterSetTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testLinkElementcharacterSet = new TestProperty('characterSet', 'charset', 'string', testLinkElementcharacterSetTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementcharacterSet);

	//#endregion characterSet

	//#region href

	var testLinkElementhrefTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementhrefTestItems.add('http://www.google.com/');
	testLinkElementhrefTestItems.add('http://www.yahoo.com/');
	testLinkElementhrefTestItems.add('http://www.msn.com/');
	testLinkElementhrefTestItems.add('http://www.aol.com/');
	testLinkElementhrefTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testLinkElementhref = new TestProperty('href', 'href', 'string', testLinkElementhrefTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementhref);

	//#endregion href

	//#region hrefLanguage

	var testLinkElementhrefLanguageTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementhrefLanguageTestItems.add('');
	testLinkElementhrefLanguageTestItems.add('234567');
	testLinkElementhrefLanguageTestItems.add('Testing a long sentence just in case the property does not support it.');
	testLinkElementhrefLanguageTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testLinkElementhrefLanguageTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testLinkElementhrefLanguage = new TestProperty('hrefLanguage', 'hreflang', 'string', testLinkElementhrefLanguageTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementhrefLanguage);

	//#endregion hrefLanguage

	//#region media

	var testLinkElementmediaTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementmediaTestItems.add('');
	testLinkElementmediaTestItems.add('234567');
	testLinkElementmediaTestItems.add('Testing a long sentence just in case the property does not support it.');
	testLinkElementmediaTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testLinkElementmediaTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testLinkElementmedia = new TestProperty('media', 'media', 'string', testLinkElementmediaTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementmedia);

	//#endregion media

	//#region relationship

	var testLinkElementrelationshipTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementrelationshipTestItems.add('');
	testLinkElementrelationshipTestItems.add('234567');
	testLinkElementrelationshipTestItems.add('Testing a long sentence just in case the property does not support it.');
	testLinkElementrelationshipTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testLinkElementrelationshipTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testLinkElementrelationship = new TestProperty('relationship', 'rel', 'string', testLinkElementrelationshipTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementrelationship);

	//#endregion relationship

	//#region reverseRelationship

	var testLinkElementreverseRelationshipTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementreverseRelationshipTestItems.add('');
	testLinkElementreverseRelationshipTestItems.add('234567');
	testLinkElementreverseRelationshipTestItems.add('Testing a long sentence just in case the property does not support it.');
	testLinkElementreverseRelationshipTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testLinkElementreverseRelationshipTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testLinkElementreverseRelationship = new TestProperty('reverseRelationship', 'rev', 'string', testLinkElementreverseRelationshipTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementreverseRelationship);

	//#endregion reverseRelationship

	//#region type

	var testLinkElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testLinkElementtypeTestItems.add('');
	testLinkElementtypeTestItems.add('234567');
	testLinkElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testLinkElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testLinkElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testLinkElementtype = new TestProperty('type', 'type', 'string', testLinkElementtypeTestItems, "", true, false);
	propertiesLinkElement.add(testLinkElementtype);

	//#endregion type

	//#endregion Initialize Properties

	var testLinkElement = new TestElement('LinkElement', 'link', 'link', propertiesLinkElement);
	elements.add(testLinkElement);

	//#endregion LinkElement

	//#region ListItemElement

	var propertiesListItemElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region value

	var testListItemElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testListItemElementvalueTestItems.add(100);
	testListItemElementvalueTestItems.add(500);
	testListItemElementvalueTestItems.add(600);
	testListItemElementvalueTestItems.add(250);
	testListItemElementvalueTestItems.add(300);

	//#endregion Initialize TestItems

	var testListItemElementvalue = new TestProperty('value', 'value', 'number', testListItemElementvalueTestItems, "", true, false);
	propertiesListItemElement.add(testListItemElementvalue);

	//#endregion value

	//#region type

	var testListItemElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testListItemElementtypeTestItems.add('a');
	testListItemElementtypeTestItems.add('A');
	testListItemElementtypeTestItems.add('i');
	testListItemElementtypeTestItems.add('I');
	testListItemElementtypeTestItems.add('1');

	//#endregion Initialize TestItems

	var testListItemElementtype = new TestProperty('type', 'type', 'string', testListItemElementtypeTestItems, "", true, false);
	propertiesListItemElement.add(testListItemElementtype);

	//#endregion type

	//#endregion Initialize Properties

	var testListItemElement = new TestElement('ListItemElement', 'li', 'li', propertiesListItemElement);
	elements.add(testListItemElement);

	//#endregion ListItemElement

	//#region MainElement

	var propertiesMainElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testMainElement = new TestElement('MainElement', 'main', 'main', propertiesMainElement);
	elements.add(testMainElement);

	//#endregion MainElement

	//#region MapElement

	var propertiesMapElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region name

	var testMapElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testMapElementnameTestItems.add('');
	testMapElementnameTestItems.add('234567');
	testMapElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testMapElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testMapElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testMapElementname = new TestProperty('name', 'name', 'string', testMapElementnameTestItems, "", true, false);
	propertiesMapElement.add(testMapElementname);

	//#endregion name

	//#endregion Initialize Properties

	var testMapElement = new TestElement('MapElement', 'map', 'map', propertiesMapElement);
	elements.add(testMapElement);

	//#endregion MapElement

	//#region MarkElement

	var propertiesMarkElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testMarkElement = new TestElement('MarkElement', 'mark', 'mark', propertiesMarkElement);
	elements.add(testMarkElement);

	//#endregion MarkElement

	//#region MetaElement

	var propertiesMetaElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region content

	var testMetaElementcontentTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testMetaElementcontentTestItems.add('');
	testMetaElementcontentTestItems.add('234567');
	testMetaElementcontentTestItems.add('Testing a long sentence just in case the property does not support it.');
	testMetaElementcontentTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testMetaElementcontentTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testMetaElementcontent = new TestProperty('content', 'content', 'string', testMetaElementcontentTestItems, "", true, false);
	propertiesMetaElement.add(testMetaElementcontent);

	//#endregion content

	//#region httpEquiv

	var testMetaElementhttpEquivTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testMetaElementhttpEquivTestItems.add('default-style');
	testMetaElementhttpEquivTestItems.add('refresh');

	//#endregion Initialize TestItems

	var testMetaElementhttpEquiv = new TestProperty('httpEquiv', 'httpEquiv', 'string', testMetaElementhttpEquivTestItems, "", true, false);
	propertiesMetaElement.add(testMetaElementhttpEquiv);

	//#endregion httpEquiv

	//#region name

	var testMetaElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testMetaElementnameTestItems.add('application-name');
	testMetaElementnameTestItems.add('author');
	testMetaElementnameTestItems.add('description');
	testMetaElementnameTestItems.add('generator');
	testMetaElementnameTestItems.add('keywords');

	//#endregion Initialize TestItems

	var testMetaElementname = new TestProperty('name', 'name', 'string', testMetaElementnameTestItems, "", true, false);
	propertiesMetaElement.add(testMetaElementname);

	//#endregion name

	//#region scheme

	var testMetaElementschemeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testMetaElementschemeTestItems.add('');
	testMetaElementschemeTestItems.add('234567');
	testMetaElementschemeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testMetaElementschemeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testMetaElementschemeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testMetaElementscheme = new TestProperty('scheme', 'scheme', 'string', testMetaElementschemeTestItems, "", true, false);
	propertiesMetaElement.add(testMetaElementscheme);

	//#endregion scheme

	//#endregion Initialize Properties

	var testMetaElement = new TestElement('MetaElement', 'meta', 'meta', propertiesMetaElement);
	elements.add(testMetaElement);

	//#endregion MetaElement

	//#region NavigationElement

	var propertiesNavigationElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testNavigationElement = new TestElement('NavigationElement', 'nav', 'nav', propertiesNavigationElement);
	elements.add(testNavigationElement);

	//#endregion NavigationElement

	//#region NoScriptElement

	var propertiesNoScriptElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testNoScriptElement = new TestElement('NoScriptElement', 'noscript', 'noscript', propertiesNoScriptElement);
	elements.add(testNoScriptElement);

	//#endregion NoScriptElement

	//#region OptionElement

	var propertiesOptionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region disabled

	var testOptionElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOptionElementdisabledTestItems.add(true);
	testOptionElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testOptionElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testOptionElementdisabledTestItems, "", true, false);
	propertiesOptionElement.add(testOptionElementdisabled);

	//#endregion disabled

	//#region label

	var testOptionElementlabelTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOptionElementlabelTestItems.add('');
	testOptionElementlabelTestItems.add('234567');
	testOptionElementlabelTestItems.add('Testing a long sentence just in case the property does not support it.');
	testOptionElementlabelTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testOptionElementlabelTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testOptionElementlabel = new TestProperty('label', 'label', 'string', testOptionElementlabelTestItems, "", true, false);
	propertiesOptionElement.add(testOptionElementlabel);

	//#endregion label

	//#region selected

	var testOptionElementselectedTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOptionElementselectedTestItems.add(true);
	testOptionElementselectedTestItems.add(false);

	//#endregion Initialize TestItems

	var testOptionElementselected = new TestProperty('selected', 'selected', 'boolean', testOptionElementselectedTestItems, "", true, true);
	propertiesOptionElement.add(testOptionElementselected);

	//#endregion selected

	//#region value

	var testOptionElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOptionElementvalueTestItems.add('');
	testOptionElementvalueTestItems.add('234567');
	testOptionElementvalueTestItems.add('Testing a long sentence just in case the property does not support it.');
	testOptionElementvalueTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testOptionElementvalueTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testOptionElementvalue = new TestProperty('value', 'value', 'string', testOptionElementvalueTestItems, "", true, false);
	propertiesOptionElement.add(testOptionElementvalue);

	//#endregion value

	//#endregion Initialize Properties

	var testOptionElement = new TestElement('OptionElement', 'option', 'option', propertiesOptionElement);
	elements.add(testOptionElement);

	//#endregion OptionElement

	//#region OptionsGroupElement

	var propertiesOptionsGroupElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region disabled

	var testOptionsGroupElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOptionsGroupElementdisabledTestItems.add(true);
	testOptionsGroupElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testOptionsGroupElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testOptionsGroupElementdisabledTestItems, "", true, false);
	propertiesOptionsGroupElement.add(testOptionsGroupElementdisabled);

	//#endregion disabled

	//#region label

	var testOptionsGroupElementlabelTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOptionsGroupElementlabelTestItems.add('');
	testOptionsGroupElementlabelTestItems.add('234567');
	testOptionsGroupElementlabelTestItems.add('Testing a long sentence just in case the property does not support it.');
	testOptionsGroupElementlabelTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testOptionsGroupElementlabelTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testOptionsGroupElementlabel = new TestProperty('label', 'label', 'string', testOptionsGroupElementlabelTestItems, "", true, false);
	propertiesOptionsGroupElement.add(testOptionsGroupElementlabel);

	//#endregion label

	//#endregion Initialize Properties

	var testOptionsGroupElement = new TestElement('OptionsGroupElement', 'optgroup', 'optgroup', propertiesOptionsGroupElement);
	elements.add(testOptionsGroupElement);

	//#endregion OptionsGroupElement

	//#region OrderedListElement

	var propertiesOrderedListElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region compact

	var testOrderedListElementcompactTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOrderedListElementcompactTestItems.add(true);
	testOrderedListElementcompactTestItems.add(false);

	//#endregion Initialize TestItems

	var testOrderedListElementcompact = new TestProperty('compact', 'compact', 'boolean', testOrderedListElementcompactTestItems, "", true, false);
	propertiesOrderedListElement.add(testOrderedListElementcompact);

	//#endregion compact

	//#region start

	var testOrderedListElementstartTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOrderedListElementstartTestItems.add(-700);
	testOrderedListElementstartTestItems.add(-500);
	testOrderedListElementstartTestItems.add(0);
	testOrderedListElementstartTestItems.add(500);
	testOrderedListElementstartTestItems.add(10000);

	//#endregion Initialize TestItems

	var testOrderedListElementstart = new TestProperty('start', 'start', 'number', testOrderedListElementstartTestItems, "", true, false);
	propertiesOrderedListElement.add(testOrderedListElementstart);

	//#endregion start

	//#region type

	var testOrderedListElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testOrderedListElementtypeTestItems.add('');
	testOrderedListElementtypeTestItems.add('234567');
	testOrderedListElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testOrderedListElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testOrderedListElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testOrderedListElementtype = new TestProperty('type', 'type', 'string', testOrderedListElementtypeTestItems, "", true, false);
	propertiesOrderedListElement.add(testOrderedListElementtype);

	//#endregion type

	//#endregion Initialize Properties

	var testOrderedListElement = new TestElement('OrderedListElement', 'ol', 'ol', propertiesOrderedListElement);
	elements.add(testOrderedListElement);

	//#endregion OrderedListElement

	//#region ParagraphElement

	var propertiesParagraphElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testParagraphElement = new TestElement('ParagraphElement', 'p', 'p', propertiesParagraphElement);
	elements.add(testParagraphElement);

	//#endregion ParagraphElement

	//#region ParameterElement

	var propertiesParameterElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region name

	var testParameterElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testParameterElementnameTestItems.add('');
	testParameterElementnameTestItems.add('234567');
	testParameterElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testParameterElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testParameterElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testParameterElementname = new TestProperty('name', 'name', 'string', testParameterElementnameTestItems, "", true, false);
	propertiesParameterElement.add(testParameterElementname);

	//#endregion name

	//#region type

	var testParameterElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testParameterElementtypeTestItems.add('');
	testParameterElementtypeTestItems.add('234567');
	testParameterElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testParameterElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testParameterElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testParameterElementtype = new TestProperty('type', 'type', 'string', testParameterElementtypeTestItems, "", true, false);
	propertiesParameterElement.add(testParameterElementtype);

	//#endregion type

	//#region value

	var testParameterElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testParameterElementvalueTestItems.add('');
	testParameterElementvalueTestItems.add('234567');
	testParameterElementvalueTestItems.add('Testing a long sentence just in case the property does not support it.');
	testParameterElementvalueTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testParameterElementvalueTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testParameterElementvalue = new TestProperty('value', 'value', 'string', testParameterElementvalueTestItems, "", true, false);
	propertiesParameterElement.add(testParameterElementvalue);

	//#endregion value

	//#region valueType

	var testParameterElementvalueTypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testParameterElementvalueTypeTestItems.add('');
	testParameterElementvalueTypeTestItems.add('234567');
	testParameterElementvalueTypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testParameterElementvalueTypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testParameterElementvalueTypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testParameterElementvalueType = new TestProperty('valueType', 'valueType', 'string', testParameterElementvalueTypeTestItems, "", true, true);
	propertiesParameterElement.add(testParameterElementvalueType);

	//#endregion valueType

	//#endregion Initialize Properties

	var testParameterElement = new TestElement('ParameterElement', 'param', 'param', propertiesParameterElement);
	elements.add(testParameterElement);

	//#endregion ParameterElement

	//#region PreformattedElement

	var propertiesPreformattedElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testPreformattedElement = new TestElement('PreformattedElement', 'pre', 'pre', propertiesPreformattedElement);
	elements.add(testPreformattedElement);

	//#endregion PreformattedElement

	//#region ProgressElement

	var propertiesProgressElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region max

	var testProgressElementmaxTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testProgressElementmaxTestItems.add(100);
	testProgressElementmaxTestItems.add(500);
	testProgressElementmaxTestItems.add(600);
	testProgressElementmaxTestItems.add(250);
	testProgressElementmaxTestItems.add(300);

	//#endregion Initialize TestItems

	var testProgressElementmax = new TestProperty('max', 'max', 'number', testProgressElementmaxTestItems, "", true, false);
	propertiesProgressElement.add(testProgressElementmax);

	//#endregion max

	//#region value

	var testProgressElementvalueTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testProgressElementvalueTestItems.add(0);
	testProgressElementvalueTestItems.add(0.4);
	testProgressElementvalueTestItems.add(0.222334);
	testProgressElementvalueTestItems.add(0.1);
	testProgressElementvalueTestItems.add(1);

	//#endregion Initialize TestItems

	var testProgressElementvalue = new TestProperty('value', 'value', 'number', testProgressElementvalueTestItems, "", true, false);
	propertiesProgressElement.add(testProgressElementvalue);

	//#endregion value

	//#endregion Initialize Properties

	var testProgressElement = new TestElement('ProgressElement', 'progress', 'progress', propertiesProgressElement);
	elements.add(testProgressElement);

	//#endregion ProgressElement

	//#region QuoteElement

	var propertiesQuoteElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region citation

	var testQuoteElementcitationTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testQuoteElementcitationTestItems.add('http://www.google.com/');
	testQuoteElementcitationTestItems.add('http://www.yahoo.com/');
	testQuoteElementcitationTestItems.add('http://www.msn.com/');
	testQuoteElementcitationTestItems.add('http://www.aol.com/');
	testQuoteElementcitationTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testQuoteElementcitation = new TestProperty('citation', 'cite', 'string', testQuoteElementcitationTestItems, "", true, false);
	propertiesQuoteElement.add(testQuoteElementcitation);

	//#endregion citation

	//#endregion Initialize Properties

	var testQuoteElement = new TestElement('QuoteElement', 'q', 'q', propertiesQuoteElement);
	elements.add(testQuoteElement);

	//#endregion QuoteElement

	//#region RootElement

	var propertiesRootElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testRootElement = new TestElement('RootElement', 'html', 'html', propertiesRootElement);
	elements.add(testRootElement);

	//#endregion RootElement

	//#region RubyElement

	var propertiesRubyElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testRubyElement = new TestElement('RubyElement', 'ruby', 'ruby', propertiesRubyElement);
	elements.add(testRubyElement);

	//#endregion RubyElement

	//#region RubyParenthesisElement

	var propertiesRubyParenthesisElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testRubyParenthesisElement = new TestElement('RubyParenthesisElement', 'rp', 'rp', propertiesRubyParenthesisElement);
	elements.add(testRubyParenthesisElement);

	//#endregion RubyParenthesisElement

	//#region RubyPronunciationElement

	var propertiesRubyPronunciationElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testRubyPronunciationElement = new TestElement('RubyPronunciationElement', 'rt', 'rt', propertiesRubyPronunciationElement);
	elements.add(testRubyPronunciationElement);

	//#endregion RubyPronunciationElement

	//#region SampleElement

	var propertiesSampleElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSampleElement = new TestElement('SampleElement', 'samp', 'samp', propertiesSampleElement);
	elements.add(testSampleElement);

	//#endregion SampleElement

	//#region ScriptElement

	var propertiesScriptElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region async

	var testScriptElementasyncTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testScriptElementasyncTestItems.add(true);
	testScriptElementasyncTestItems.add(false);

	//#endregion Initialize TestItems

	var testScriptElementasync = new TestProperty('async', 'async', 'boolean', testScriptElementasyncTestItems, "", true, false);
	propertiesScriptElement.add(testScriptElementasync);

	//#endregion async

	//#region source

	var testScriptElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testScriptElementsourceTestItems.add('http://www.google.com/');
	testScriptElementsourceTestItems.add('http://www.yahoo.com/');
	testScriptElementsourceTestItems.add('http://www.msn.com/');
	testScriptElementsourceTestItems.add('http://www.aol.com/');
	testScriptElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testScriptElementsource = new TestProperty('source', 'src', 'string', testScriptElementsourceTestItems, "", true, false);
	propertiesScriptElement.add(testScriptElementsource);

	//#endregion source

	//#region type

	var testScriptElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testScriptElementtypeTestItems.add('');
	testScriptElementtypeTestItems.add('234567');
	testScriptElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testScriptElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testScriptElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testScriptElementtype = new TestProperty('type', 'type', 'string', testScriptElementtypeTestItems, "", true, false);
	propertiesScriptElement.add(testScriptElementtype);

	//#endregion type

	//#region defer

	var testScriptElementdeferTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testScriptElementdeferTestItems.add(true);
	testScriptElementdeferTestItems.add(false);

	//#endregion Initialize TestItems

	var testScriptElementdefer = new TestProperty('defer', 'defer', 'boolean', testScriptElementdeferTestItems, "", true, false);
	propertiesScriptElement.add(testScriptElementdefer);

	//#endregion defer

	//#endregion Initialize Properties

	var testScriptElement = new TestElement('ScriptElement', 'script', 'script', propertiesScriptElement);
	elements.add(testScriptElement);

	//#endregion ScriptElement

	//#region SectionElement

	var propertiesSectionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSectionElement = new TestElement('SectionElement', 'section', 'section', propertiesSectionElement);
	elements.add(testSectionElement);

	//#endregion SectionElement

	//#region SelectElement

	var propertiesSelectElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region autoFocus

	var testSelectElementautoFocusTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSelectElementautoFocusTestItems.add(true);
	testSelectElementautoFocusTestItems.add(false);

	//#endregion Initialize TestItems

	var testSelectElementautoFocus = new TestProperty('autoFocus', 'autofocus', 'boolean', testSelectElementautoFocusTestItems, "", true, false);
	propertiesSelectElement.add(testSelectElementautoFocus);

	//#endregion autoFocus

	//#region disabled

	var testSelectElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSelectElementdisabledTestItems.add(true);
	testSelectElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testSelectElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testSelectElementdisabledTestItems, "", true, false);
	propertiesSelectElement.add(testSelectElementdisabled);

	//#endregion disabled

	//#region multipleOptions

	var testSelectElementmultipleOptionsTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSelectElementmultipleOptionsTestItems.add(true);
	testSelectElementmultipleOptionsTestItems.add(false);

	//#endregion Initialize TestItems

	var testSelectElementmultipleOptions = new TestProperty('multipleOptions', 'multiple', 'boolean', testSelectElementmultipleOptionsTestItems, "", true, false);
	propertiesSelectElement.add(testSelectElementmultipleOptions);

	//#endregion multipleOptions

	//#region name

	var testSelectElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSelectElementnameTestItems.add('');
	testSelectElementnameTestItems.add('234567');
	testSelectElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testSelectElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testSelectElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testSelectElementname = new TestProperty('name', 'name', 'string', testSelectElementnameTestItems, "", true, false);
	propertiesSelectElement.add(testSelectElementname);

	//#endregion name

	//#region required

	var testSelectElementrequiredTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSelectElementrequiredTestItems.add(true);
	testSelectElementrequiredTestItems.add(false);

	//#endregion Initialize TestItems

	var testSelectElementrequired = new TestProperty('required', 'required', 'boolean', testSelectElementrequiredTestItems, "", true, false);
	propertiesSelectElement.add(testSelectElementrequired);

	//#endregion required

	//#region size

	var testSelectElementsizeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSelectElementsizeTestItems.add(100);
	testSelectElementsizeTestItems.add(500);
	testSelectElementsizeTestItems.add(600);
	testSelectElementsizeTestItems.add(250);
	testSelectElementsizeTestItems.add(300);

	//#endregion Initialize TestItems

	var testSelectElementsize = new TestProperty('size', 'size', 'number', testSelectElementsizeTestItems, "", true, false);
	propertiesSelectElement.add(testSelectElementsize);

	//#endregion size

	//#endregion Initialize Properties

	var testSelectElement = new TestElement('SelectElement', 'select', 'select', propertiesSelectElement);
	elements.add(testSelectElement);

	//#endregion SelectElement

	//#region SmallElement

	var propertiesSmallElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSmallElement = new TestElement('SmallElement', 'small', 'small', propertiesSmallElement);
	elements.add(testSmallElement);

	//#endregion SmallElement

	//#region SourceElement

	var propertiesSourceElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region source

	var testSourceElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSourceElementsourceTestItems.add('http://www.google.com/');
	testSourceElementsourceTestItems.add('http://www.yahoo.com/');
	testSourceElementsourceTestItems.add('http://www.msn.com/');
	testSourceElementsourceTestItems.add('http://www.aol.com/');
	testSourceElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testSourceElementsource = new TestProperty('source', 'src', 'string', testSourceElementsourceTestItems, "", true, false);
	propertiesSourceElement.add(testSourceElementsource);

	//#endregion source

	//#region type

	var testSourceElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testSourceElementtypeTestItems.add('');
	testSourceElementtypeTestItems.add('234567');
	testSourceElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testSourceElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testSourceElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testSourceElementtype = new TestProperty('type', 'type', 'string', testSourceElementtypeTestItems, "", true, false);
	propertiesSourceElement.add(testSourceElementtype);

	//#endregion type

	//#endregion Initialize Properties

	var testSourceElement = new TestElement('SourceElement', 'source', 'source', propertiesSourceElement);
	elements.add(testSourceElement);

	//#endregion SourceElement

	//#region SpanElement

	var propertiesSpanElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSpanElement = new TestElement('SpanElement', 'span', 'span', propertiesSpanElement);
	elements.add(testSpanElement);

	//#endregion SpanElement

	//#region StrikethroughElement

	var propertiesStrikethroughElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testStrikethroughElement = new TestElement('StrikethroughElement', 's', 's', propertiesStrikethroughElement);
	elements.add(testStrikethroughElement);

	//#endregion StrikethroughElement

	//#region StrongElement

	var propertiesStrongElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testStrongElement = new TestElement('StrongElement', 'strong', 'strong', propertiesStrongElement);
	elements.add(testStrongElement);

	//#endregion StrongElement

	//#region StyleElement

	var propertiesStyleElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region type

	var testStyleElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testStyleElementtypeTestItems.add('');
	testStyleElementtypeTestItems.add('234567');
	testStyleElementtypeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testStyleElementtypeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testStyleElementtypeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testStyleElementtype = new TestProperty('type', 'type', 'string', testStyleElementtypeTestItems, "", true, false);
	propertiesStyleElement.add(testStyleElementtype);

	//#endregion type

	//#region media

	var testStyleElementmediaTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testStyleElementmediaTestItems.add('');
	testStyleElementmediaTestItems.add('234567');
	testStyleElementmediaTestItems.add('Testing a long sentence just in case the property does not support it.');
	testStyleElementmediaTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testStyleElementmediaTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testStyleElementmedia = new TestProperty('media', 'media', 'string', testStyleElementmediaTestItems, "", true, false);
	propertiesStyleElement.add(testStyleElementmedia);

	//#endregion media

	//#region disabled

	var testStyleElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testStyleElementdisabledTestItems.add(true);
	testStyleElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testStyleElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testStyleElementdisabledTestItems, "document.body.appendChild(element.element);", false, true);
	propertiesStyleElement.add(testStyleElementdisabled);

	//#endregion disabled

	//#endregion Initialize Properties

	var testStyleElement = new TestElement('StyleElement', 'style', 'style', propertiesStyleElement);
	elements.add(testStyleElement);

	//#endregion StyleElement

	//#region SubscriptElement

	var propertiesSubscriptElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSubscriptElement = new TestElement('SubscriptElement', 'sub', 'sub', propertiesSubscriptElement);
	elements.add(testSubscriptElement);

	//#endregion SubscriptElement

	//#region SummaryElement

	var propertiesSummaryElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSummaryElement = new TestElement('SummaryElement', 'summary', 'summary', propertiesSummaryElement);
	elements.add(testSummaryElement);

	//#endregion SummaryElement

	//#region SuperscriptElement

	var propertiesSuperscriptElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testSuperscriptElement = new TestElement('SuperscriptElement', 'sup', 'sup', propertiesSuperscriptElement);
	elements.add(testSuperscriptElement);

	//#endregion SuperscriptElement

	//#region TableElement

	var propertiesTableElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testTableElement = new TestElement('TableElement', 'table', 'table', propertiesTableElement);
	elements.add(testTableElement);

	//#endregion TableElement

	//#region TableCaptionElement

	var propertiesTableCaptionElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testTableCaptionElement = new TestElement('TableCaptionElement', 'caption', 'caption', propertiesTableCaptionElement);
	elements.add(testTableCaptionElement);

	//#endregion TableCaptionElement

	//#region TableColumnElement

	var propertiesTableColumnElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region span

	var testTableColumnElementspanTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableColumnElementspanTestItems.add(1);
	testTableColumnElementspanTestItems.add(3);
	testTableColumnElementspanTestItems.add(10);
	testTableColumnElementspanTestItems.add(12);
	testTableColumnElementspanTestItems.add(20);

	//#endregion Initialize TestItems

	var testTableColumnElementspan = new TestProperty('span', 'span', 'number', testTableColumnElementspanTestItems, "", true, false);
	propertiesTableColumnElement.add(testTableColumnElementspan);

	//#endregion span

	//#endregion Initialize Properties

	var testTableColumnElement = new TestElement('TableColumnElement', 'col', 'col', propertiesTableColumnElement);
	elements.add(testTableColumnElement);

	//#endregion TableColumnElement

	//#region TableColumnGroupElement

	var propertiesTableColumnGroupElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region span

	var testTableColumnGroupElementspanTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableColumnGroupElementspanTestItems.add(1);
	testTableColumnGroupElementspanTestItems.add(3);
	testTableColumnGroupElementspanTestItems.add(10);
	testTableColumnGroupElementspanTestItems.add(12);
	testTableColumnGroupElementspanTestItems.add(20);

	//#endregion Initialize TestItems

	var testTableColumnGroupElementspan = new TestProperty('span', 'span', 'number', testTableColumnGroupElementspanTestItems, "", true, false);
	propertiesTableColumnGroupElement.add(testTableColumnGroupElementspan);

	//#endregion span

	//#region width

	var testTableColumnGroupElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableColumnGroupElementwidthTestItems.add('1');
	testTableColumnGroupElementwidthTestItems.add('3');
	testTableColumnGroupElementwidthTestItems.add('10');
	testTableColumnGroupElementwidthTestItems.add('12');
	testTableColumnGroupElementwidthTestItems.add('20');

	//#endregion Initialize TestItems

	var testTableColumnGroupElementwidth = new TestProperty('width', 'width', 'string', testTableColumnGroupElementwidthTestItems, "", true, false);
	propertiesTableColumnGroupElement.add(testTableColumnGroupElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testTableColumnGroupElement = new TestElement('TableColumnGroupElement', 'colgroup', 'colgroup', propertiesTableColumnGroupElement);
	elements.add(testTableColumnGroupElement);

	//#endregion TableColumnGroupElement

	//#region TableDataCellElement

	var propertiesTableDataCellElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region columnSpan

	var testTableDataCellElementcolumnSpanTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableDataCellElementcolumnSpanTestItems.add(1);
	testTableDataCellElementcolumnSpanTestItems.add(3);
	testTableDataCellElementcolumnSpanTestItems.add(10);
	testTableDataCellElementcolumnSpanTestItems.add(12);
	testTableDataCellElementcolumnSpanTestItems.add(20);

	//#endregion Initialize TestItems

	var testTableDataCellElementcolumnSpan = new TestProperty('columnSpan', 'colSpan', 'number', testTableDataCellElementcolumnSpanTestItems, "", true, false);
	propertiesTableDataCellElement.add(testTableDataCellElementcolumnSpan);

	//#endregion columnSpan

	//#region headers

	var testTableDataCellElementheadersTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableDataCellElementheadersTestItems.add('');
	testTableDataCellElementheadersTestItems.add('234567');
	testTableDataCellElementheadersTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTableDataCellElementheadersTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTableDataCellElementheadersTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTableDataCellElementheaders = new TestProperty('headers', 'headers', 'string', testTableDataCellElementheadersTestItems, "", true, false);
	propertiesTableDataCellElement.add(testTableDataCellElementheaders);

	//#endregion headers

	//#region rowSpan

	var testTableDataCellElementrowSpanTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableDataCellElementrowSpanTestItems.add(1);
	testTableDataCellElementrowSpanTestItems.add(3);
	testTableDataCellElementrowSpanTestItems.add(10);
	testTableDataCellElementrowSpanTestItems.add(12);
	testTableDataCellElementrowSpanTestItems.add(20);

	//#endregion Initialize TestItems

	var testTableDataCellElementrowSpan = new TestProperty('rowSpan', 'rowSpan', 'number', testTableDataCellElementrowSpanTestItems, "", true, false);
	propertiesTableDataCellElement.add(testTableDataCellElementrowSpan);

	//#endregion rowSpan

	//#region scope

	var testTableDataCellElementscopeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableDataCellElementscopeTestItems.add('');
	testTableDataCellElementscopeTestItems.add('234567');
	testTableDataCellElementscopeTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTableDataCellElementscopeTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTableDataCellElementscopeTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTableDataCellElementscope = new TestProperty('scope', 'scope', 'string', testTableDataCellElementscopeTestItems, "", true, false);
	propertiesTableDataCellElement.add(testTableDataCellElementscope);

	//#endregion scope

	//#endregion Initialize Properties

	var testTableDataCellElement = new TestElement('TableDataCellElement', 'td', 'td', propertiesTableDataCellElement);
	elements.add(testTableDataCellElement);

	//#endregion TableDataCellElement

	//#region TableHeaderCellElement

	var propertiesTableHeaderCellElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region columnSpan

	var testTableHeaderCellElementcolumnSpanTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableHeaderCellElementcolumnSpanTestItems.add(1);
	testTableHeaderCellElementcolumnSpanTestItems.add(3);
	testTableHeaderCellElementcolumnSpanTestItems.add(10);
	testTableHeaderCellElementcolumnSpanTestItems.add(12);
	testTableHeaderCellElementcolumnSpanTestItems.add(20);

	//#endregion Initialize TestItems

	var testTableHeaderCellElementcolumnSpan = new TestProperty('columnSpan', 'colSpan', 'number', testTableHeaderCellElementcolumnSpanTestItems, "", true, false);
	propertiesTableHeaderCellElement.add(testTableHeaderCellElementcolumnSpan);

	//#endregion columnSpan

	//#region headers

	var testTableHeaderCellElementheadersTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableHeaderCellElementheadersTestItems.add('');
	testTableHeaderCellElementheadersTestItems.add('234567');
	testTableHeaderCellElementheadersTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTableHeaderCellElementheadersTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTableHeaderCellElementheadersTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTableHeaderCellElementheaders = new TestProperty('headers', 'headers', 'string', testTableHeaderCellElementheadersTestItems, "", true, false);
	propertiesTableHeaderCellElement.add(testTableHeaderCellElementheaders);

	//#endregion headers

	//#region rowSpan

	var testTableHeaderCellElementrowSpanTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTableHeaderCellElementrowSpanTestItems.add(1);
	testTableHeaderCellElementrowSpanTestItems.add(3);
	testTableHeaderCellElementrowSpanTestItems.add(10);
	testTableHeaderCellElementrowSpanTestItems.add(12);
	testTableHeaderCellElementrowSpanTestItems.add(20);

	//#endregion Initialize TestItems

	var testTableHeaderCellElementrowSpan = new TestProperty('rowSpan', 'rowSpan', 'number', testTableHeaderCellElementrowSpanTestItems, "", true, false);
	propertiesTableHeaderCellElement.add(testTableHeaderCellElementrowSpan);

	//#endregion rowSpan

	//#endregion Initialize Properties

	var testTableHeaderCellElement = new TestElement('TableHeaderCellElement', 'th', 'th', propertiesTableHeaderCellElement);
	elements.add(testTableHeaderCellElement);

	//#endregion TableHeaderCellElement

	//#region TableRowElement

	var propertiesTableRowElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testTableRowElement = new TestElement('TableRowElement', 'tr', 'tr', propertiesTableRowElement);
	elements.add(testTableRowElement);

	//#endregion TableRowElement

	//#region TextAreaElement

	var propertiesTextAreaElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region autoFocus

	var testTextAreaElementautoFocusTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementautoFocusTestItems.add(true);
	testTextAreaElementautoFocusTestItems.add(false);

	//#endregion Initialize TestItems

	var testTextAreaElementautoFocus = new TestProperty('autoFocus', 'autofocus', 'boolean', testTextAreaElementautoFocusTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementautoFocus);

	//#endregion autoFocus

	//#region columns

	var testTextAreaElementcolumnsTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementcolumnsTestItems.add(1);
	testTextAreaElementcolumnsTestItems.add(3);
	testTextAreaElementcolumnsTestItems.add(10);
	testTextAreaElementcolumnsTestItems.add(12);
	testTextAreaElementcolumnsTestItems.add(20);

	//#endregion Initialize TestItems

	var testTextAreaElementcolumns = new TestProperty('columns', 'cols', 'number', testTextAreaElementcolumnsTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementcolumns);

	//#endregion columns

	//#region disabled

	var testTextAreaElementdisabledTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementdisabledTestItems.add(true);
	testTextAreaElementdisabledTestItems.add(false);

	//#endregion Initialize TestItems

	var testTextAreaElementdisabled = new TestProperty('disabled', 'disabled', 'boolean', testTextAreaElementdisabledTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementdisabled);

	//#endregion disabled

	//#region maxLength

	var testTextAreaElementmaxLengthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementmaxLengthTestItems.add(5);
	testTextAreaElementmaxLengthTestItems.add(100);
	testTextAreaElementmaxLengthTestItems.add(500);
	testTextAreaElementmaxLengthTestItems.add(2147483647);

	//#endregion Initialize TestItems

	var testTextAreaElementmaxLength = new TestProperty('maxLength', 'maxLength', 'number', testTextAreaElementmaxLengthTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementmaxLength);

	//#endregion maxLength

	//#region name

	var testTextAreaElementnameTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementnameTestItems.add('');
	testTextAreaElementnameTestItems.add('234567');
	testTextAreaElementnameTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTextAreaElementnameTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTextAreaElementnameTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTextAreaElementname = new TestProperty('name', 'name', 'string', testTextAreaElementnameTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementname);

	//#endregion name

	//#region placeHolder

	var testTextAreaElementplaceHolderTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementplaceHolderTestItems.add('');
	testTextAreaElementplaceHolderTestItems.add('234567');
	testTextAreaElementplaceHolderTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTextAreaElementplaceHolderTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTextAreaElementplaceHolderTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTextAreaElementplaceHolder = new TestProperty('placeHolder', 'placeholder', 'string', testTextAreaElementplaceHolderTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementplaceHolder);

	//#endregion placeHolder

	//#region readOnly

	var testTextAreaElementreadOnlyTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementreadOnlyTestItems.add(true);
	testTextAreaElementreadOnlyTestItems.add(false);

	//#endregion Initialize TestItems

	var testTextAreaElementreadOnly = new TestProperty('readOnly', 'readOnly', 'boolean', testTextAreaElementreadOnlyTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementreadOnly);

	//#endregion readOnly

	//#region required

	var testTextAreaElementrequiredTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementrequiredTestItems.add(true);
	testTextAreaElementrequiredTestItems.add(false);

	//#endregion Initialize TestItems

	var testTextAreaElementrequired = new TestProperty('required', 'required', 'boolean', testTextAreaElementrequiredTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementrequired);

	//#endregion required

	//#region rows

	var testTextAreaElementrowsTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementrowsTestItems.add(1);
	testTextAreaElementrowsTestItems.add(3);
	testTextAreaElementrowsTestItems.add(10);
	testTextAreaElementrowsTestItems.add(12);
	testTextAreaElementrowsTestItems.add(20);

	//#endregion Initialize TestItems

	var testTextAreaElementrows = new TestProperty('rows', 'rows', 'number', testTextAreaElementrowsTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementrows);

	//#endregion rows

	//#region selectionEnd

	var testTextAreaElementselectionEndTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementselectionEndTestItems.add(1);
	testTextAreaElementselectionEndTestItems.add(3);
	testTextAreaElementselectionEndTestItems.add(10);
	testTextAreaElementselectionEndTestItems.add(12);
	testTextAreaElementselectionEndTestItems.add(20);

	//#endregion Initialize TestItems

	var testTextAreaElementselectionEnd = new TestProperty('selectionEnd', 'selectionEnd', 'number', testTextAreaElementselectionEndTestItems, "element.element.style.opacity = 0; document.body.appendChild(element.element); element.text = 'abcdefghijklmnopqestuvwxyz';", false, true);
	propertiesTextAreaElement.add(testTextAreaElementselectionEnd);

	//#endregion selectionEnd

	//#region selectionStart

	var testTextAreaElementselectionStartTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementselectionStartTestItems.add(1);
	testTextAreaElementselectionStartTestItems.add(3);
	testTextAreaElementselectionStartTestItems.add(10);
	testTextAreaElementselectionStartTestItems.add(12);
	testTextAreaElementselectionStartTestItems.add(20);

	//#endregion Initialize TestItems

	var testTextAreaElementselectionStart = new TestProperty('selectionStart', 'selectionStart', 'number', testTextAreaElementselectionStartTestItems, "element.element.style.opacity = 0; document.body.appendChild(element.element); element.text = 'abcdefghijklmnopqestuvwxyz'; element.selectionEnd = 21;", false, true);
	propertiesTextAreaElement.add(testTextAreaElementselectionStart);

	//#endregion selectionStart

	//#region wrap

	var testTextAreaElementwrapTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTextAreaElementwrapTestItems.add('cols');

	//#endregion Initialize TestItems

	var testTextAreaElementwrap = new TestProperty('wrap', 'wrap', 'string', testTextAreaElementwrapTestItems, "", true, false);
	propertiesTextAreaElement.add(testTextAreaElementwrap);

	//#endregion wrap

	//#endregion Initialize Properties

	var testTextAreaElement = new TestElement('TextAreaElement', 'textarea', 'textarea', propertiesTextAreaElement);
	elements.add(testTextAreaElement);

	//#endregion TextAreaElement

	//#region TitleElement

	var propertiesTitleElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testTitleElement = new TestElement('TitleElement', 'title', 'title', propertiesTitleElement);
	elements.add(testTitleElement);

	//#endregion TitleElement

	//#region TrackElement

	var propertiesTrackElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region default

	var testTrackElementdefaultTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTrackElementdefaultTestItems.add(true);
	testTrackElementdefaultTestItems.add(false);

	//#endregion Initialize TestItems

	var testTrackElementdefault = new TestProperty('default', 'default', 'boolean', testTrackElementdefaultTestItems, "", true, false);
	propertiesTrackElement.add(testTrackElementdefault);

	//#endregion default

	//#region kind

	var testTrackElementkindTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTrackElementkindTestItems.add('subtitles');
	testTrackElementkindTestItems.add('captions');
	testTrackElementkindTestItems.add('descriptions');
	testTrackElementkindTestItems.add('chapters');
	testTrackElementkindTestItems.add('metadata');

	//#endregion Initialize TestItems

	var testTrackElementkind = new TestProperty('kind', 'kind', 'string', testTrackElementkindTestItems, "", true, false);
	propertiesTrackElement.add(testTrackElementkind);

	//#endregion kind

	//#region label

	var testTrackElementlabelTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTrackElementlabelTestItems.add('');
	testTrackElementlabelTestItems.add('234567');
	testTrackElementlabelTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTrackElementlabelTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTrackElementlabelTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTrackElementlabel = new TestProperty('label', 'label', 'string', testTrackElementlabelTestItems, "", true, false);
	propertiesTrackElement.add(testTrackElementlabel);

	//#endregion label

	//#region source

	var testTrackElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTrackElementsourceTestItems.add('http://www.google.com/');
	testTrackElementsourceTestItems.add('http://www.yahoo.com/');
	testTrackElementsourceTestItems.add('http://www.msn.com/');
	testTrackElementsourceTestItems.add('http://www.aol.com/');
	testTrackElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testTrackElementsource = new TestProperty('source', 'src', 'string', testTrackElementsourceTestItems, "", true, false);
	propertiesTrackElement.add(testTrackElementsource);

	//#endregion source

	//#region sourceLanguage

	var testTrackElementsourceLanguageTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testTrackElementsourceLanguageTestItems.add('');
	testTrackElementsourceLanguageTestItems.add('234567');
	testTrackElementsourceLanguageTestItems.add('Testing a long sentence just in case the property does not support it.');
	testTrackElementsourceLanguageTestItems.add('Special characters !@#$@#$$%(^*$()&^%&');
	testTrackElementsourceLanguageTestItems.add('Short string.');

	//#endregion Initialize TestItems

	var testTrackElementsourceLanguage = new TestProperty('sourceLanguage', 'srclang', 'string', testTrackElementsourceLanguageTestItems, "", true, false);
	propertiesTrackElement.add(testTrackElementsourceLanguage);

	//#endregion sourceLanguage

	//#endregion Initialize Properties

	var testTrackElement = new TestElement('TrackElement', 'track', 'track', propertiesTrackElement);
	elements.add(testTrackElement);

	//#endregion TrackElement

	//#region UnderlineElement

	var propertiesUnderlineElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testUnderlineElement = new TestElement('UnderlineElement', 'u', 'u', propertiesUnderlineElement);
	elements.add(testUnderlineElement);

	//#endregion UnderlineElement

	//#region UnorderedListElement

	var propertiesUnorderedListElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region compact

	var testUnorderedListElementcompactTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testUnorderedListElementcompactTestItems.add(true);
	testUnorderedListElementcompactTestItems.add(false);

	//#endregion Initialize TestItems

	var testUnorderedListElementcompact = new TestProperty('compact', 'compact', 'boolean', testUnorderedListElementcompactTestItems, "", true, false);
	propertiesUnorderedListElement.add(testUnorderedListElementcompact);

	//#endregion compact

	//#region type

	var testUnorderedListElementtypeTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testUnorderedListElementtypeTestItems.add('circle');
	testUnorderedListElementtypeTestItems.add('disc');
	testUnorderedListElementtypeTestItems.add('square');

	//#endregion Initialize TestItems

	var testUnorderedListElementtype = new TestProperty('type', 'type', 'string', testUnorderedListElementtypeTestItems, "", true, false);
	propertiesUnorderedListElement.add(testUnorderedListElementtype);

	//#endregion type

	//#endregion Initialize Properties

	var testUnorderedListElement = new TestElement('UnorderedListElement', 'ul', 'ul', propertiesUnorderedListElement);
	elements.add(testUnorderedListElement);

	//#endregion UnorderedListElement

	//#region VariableElement

	var propertiesVariableElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testVariableElement = new TestElement('VariableElement', 'var', 'variable', propertiesVariableElement);
	elements.add(testVariableElement);

	//#endregion VariableElement

	//#region VideoElement

	var propertiesVideoElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#region autoPlay

	var testVideoElementautoPlayTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementautoPlayTestItems.add(true);
	testVideoElementautoPlayTestItems.add(false);

	//#endregion Initialize TestItems

	var testVideoElementautoPlay = new TestProperty('autoPlay', 'autoplay', 'boolean', testVideoElementautoPlayTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementautoPlay);

	//#endregion autoPlay

	//#region buffered

	var testVideoElementbufferedTestItems = new Array<any>();
	
	//#region Initialize TestItems


	//#endregion Initialize TestItems

	var testVideoElementbuffered = new TestProperty('buffered', 'buffered', 'TimeRanges', testVideoElementbufferedTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementbuffered);

	//#endregion buffered

	//#region controls

	var testVideoElementcontrolsTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementcontrolsTestItems.add(true);
	testVideoElementcontrolsTestItems.add(false);

	//#endregion Initialize TestItems

	var testVideoElementcontrols = new TestProperty('controls', 'controls', 'boolean', testVideoElementcontrolsTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementcontrols);

	//#endregion controls

	//#region height

	var testVideoElementheightTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementheightTestItems.add(100);
	testVideoElementheightTestItems.add(500);
	testVideoElementheightTestItems.add(600);
	testVideoElementheightTestItems.add(250);
	testVideoElementheightTestItems.add(300);

	//#endregion Initialize TestItems

	var testVideoElementheight = new TestProperty('height', 'height', 'number', testVideoElementheightTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementheight);

	//#endregion height

	//#region loop

	var testVideoElementloopTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementloopTestItems.add(true);
	testVideoElementloopTestItems.add(false);

	//#endregion Initialize TestItems

	var testVideoElementloop = new TestProperty('loop', 'loop', 'boolean', testVideoElementloopTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementloop);

	//#endregion loop

	//#region muted

	var testVideoElementmutedTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementmutedTestItems.add(true);
	testVideoElementmutedTestItems.add(false);

	//#endregion Initialize TestItems

	var testVideoElementmuted = new TestProperty('muted', 'muted', 'boolean', testVideoElementmutedTestItems, "", true, true);
	propertiesVideoElement.add(testVideoElementmuted);

	//#endregion muted

	//#region played

	var testVideoElementplayedTestItems = new Array<any>();
	
	//#region Initialize TestItems


	//#endregion Initialize TestItems

	var testVideoElementplayed = new TestProperty('played', 'played', 'TimeRanges', testVideoElementplayedTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementplayed);

	//#endregion played

	//#region preload

	var testVideoElementpreloadTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementpreloadTestItems.add('none');
	testVideoElementpreloadTestItems.add('metadata');
	testVideoElementpreloadTestItems.add('auto');

	//#endregion Initialize TestItems

	var testVideoElementpreload = new TestProperty('preload', 'preload', 'string', testVideoElementpreloadTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementpreload);

	//#endregion preload

	//#region poster

	var testVideoElementposterTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementposterTestItems.add('http://www.google.com/');
	testVideoElementposterTestItems.add('http://www.yahoo.com/');
	testVideoElementposterTestItems.add('http://www.msn.com/');
	testVideoElementposterTestItems.add('http://www.aol.com/');
	testVideoElementposterTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testVideoElementposter = new TestProperty('poster', 'poster', 'string', testVideoElementposterTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementposter);

	//#endregion poster

	//#region source

	var testVideoElementsourceTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementsourceTestItems.add('http://www.google.com/');
	testVideoElementsourceTestItems.add('http://www.yahoo.com/');
	testVideoElementsourceTestItems.add('http://www.msn.com/');
	testVideoElementsourceTestItems.add('http://www.aol.com/');
	testVideoElementsourceTestItems.add('http://www.something.com/');

	//#endregion Initialize TestItems

	var testVideoElementsource = new TestProperty('source', 'src', 'string', testVideoElementsourceTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementsource);

	//#endregion source

	//#region width

	var testVideoElementwidthTestItems = new Array<any>();
	
	//#region Initialize TestItems

	testVideoElementwidthTestItems.add(100);
	testVideoElementwidthTestItems.add(500);
	testVideoElementwidthTestItems.add(600);
	testVideoElementwidthTestItems.add(250);
	testVideoElementwidthTestItems.add(300);

	//#endregion Initialize TestItems

	var testVideoElementwidth = new TestProperty('width', 'width', 'number', testVideoElementwidthTestItems, "", true, false);
	propertiesVideoElement.add(testVideoElementwidth);

	//#endregion width

	//#endregion Initialize Properties

	var testVideoElement = new TestElement('VideoElement', 'video', 'video', propertiesVideoElement);
	elements.add(testVideoElement);

	//#endregion VideoElement

	//#region WordBreakOpportunityElement

	var propertiesWordBreakOpportunityElement = new Array<TestProperty>();

	//#region Initialize Properties

	//#endregion Initialize Properties

	var testWordBreakOpportunityElement = new TestElement('WordBreakOpportunityElement', 'wbr', 'wbr', propertiesWordBreakOpportunityElement);
	elements.add(testWordBreakOpportunityElement);

	//#endregion WordBreakOpportunityElement

	//#endregion Array Initialzation

    //#endregion Variables

    describe('Classical', () => {

        describe('Html', () => {

            //#region Factory Methods

            elements.query().where(t => t.IsAutoGeneratedElement()).forEach(element => {
                var factoryMethod = element.factoryMethod;
                var elementName = element.name;

                describe(factoryMethod, () => {
                    it('should return an instance of ' + elementName + '.', () => {
                        var element = m[factoryMethod]();
                        expect(element.getType()).toBe(typeOf(e[elementName]));
                    });
                    it('should not initialize the returned instance.', () => {
                        var element = m[factoryMethod]();
                        expect(element.isInitialized()).toBe(false);
                    });
                });
            });

            //#endregion Factory Methods

            //#region Elements

            describe('Elements', () => {

                //#region HtmlElement

                describe('HtmlElement', () => {
                    it('should throw an error for an invalid property value.', () => {
                        var model = {
                            property: new b.Property(0)
                        };

                        var audioElement = m.create(m.audio());
                        expect(() => audioElement.volume = 2).toThrow();
                        expect(audioElement.element['volume']).toBe(audioElement.volume);

                        audioElement = m.create(m.audio({
                            volumeBinder: bind(model.property, p => p.value)
                        }));
                        expect(() => model.property.value = 2).toThrow();
                        expect(audioElement.element['volume']).toBe(audioElement.volume);
                        expect(audioElement.element['volume']).toBe(model.property.value);

                        model = {
                            property: new b.Property(10)
                        };

                        var inputElement = m.create(m.input({
                            size: 10
                        }));
                        expect(() => inputElement.size = 0).toThrow();
                        expect(inputElement.size).toBe(10);
                        expect(inputElement.element['size']).toBe(inputElement.size);

                        inputElement = m.create(m.input({
                            sizeBinder: bind(model.property, p => p.value)
                        }));
                        expect(() => model.property.value = 0).toThrow();
                        expect(inputElement.size).toBe(10);
                        expect(inputElement.element['size']).toBe(inputElement.size);
                        expect(inputElement.element['size']).toBe(model.property.value);

                    });
                });

                //#endregion HtmlElement

                //#region HtmlElementContainer

                //#endregion HtmlElementContainer

                //#region Concrete Elements

                elements.query().where(t => !t.IsAutoGeneratedElement()).forEach(element => {
                    var name = element.name;
                    var elementName = element.elementName;
                    var factoryMethod = element.factoryMethod;

                    describe(name, () => {

                        element.properties.query().forEach(prop => {
                            var propertyName = prop.propertyName;

                            describe(propertyName, () => {
                                it('should have the same value as the ' + propertyName + ' property in the config.', () => {
                                    elements.query().where(t => t.IsAutoGeneratedElement()).forEach(testElement => {
                                        var element;
                                        var factoryMethod = testElement.factoryMethod;
                                        var config = new Object();

                                        prop.testItems.query().forEach(testItem => {
                                            config[propertyName] = testItem;
                                            element = m.create(m[factoryMethod](config));
                                            expect(element[propertyName]).toBe(testItem);
                                        });
                                    });
                                });
                                it('should have the same value as the ' + propertyName + 'Binder property in the config.', () => {
                                    elements.query().where(t => t.IsAutoGeneratedElement()).forEach(testElement => {
                                        var element;
                                        var factoryMethod = testElement.factoryMethod;
                                        var config = new Object();

                                        prop.testItems.query().forEach(testItem => {
                                            config[propertyName + 'Binder'] = bind(testItem, t => t);

                                            element = m.create(m[factoryMethod](config));
                                            expect(element[propertyName]).toBe(testItem);
                                        });
                                    });
                                });
                            });
                        });
                    });
                });

                elements.query().where(t => t.IsAutoGeneratedElement()).forEach(element => {
                    var name = element.name;
                    var elementName = element.elementName;
                    var factoryMethod = element.factoryMethod;

                    describe(name, () => {

                        //#region elementName

                        describe('elementName', () => {
                            it('should be ' + elementName + '.', () => {
                                var elementVariable = m.create(m[factoryMethod]());
                                expect(elementVariable.elementName).toBe(elementName);
                            });
                            it('should equal the nodeName of the element returned by document.createElement.', () => {
                                var elementVariable = m.create(m[factoryMethod]()),
                                    element = document.createElement(elementVariable.elementName);
                                expect(elementVariable.elementName).toBe(element.nodeName.toLowerCase());
                            });
                        });

                        //#endregion elementName

                        //#region createElement

                        describe('createElement', () => {
                            it('should create an element.', () => {
                                var elementVariable = m.create(m[factoryMethod]()),
                                    element = elementVariable.createElement(document);
                                expect(u.isDefined(element)).toBe(true);
                            });
                            it('should create an element with a nodeName of ' + elementName + '.', () => {
                                var elementVariable = m.create(m[factoryMethod]()),
                                    element = elementVariable.createElement(document);
                                expect(element.nodeName.toLowerCase()).toBe(elementName);
                            });
                        });

                        //#endregion createElement

                        //#region Properties

                        element.properties.query().forEach(prop => {
                            var propertyName = prop.propertyName;
                            var propertyElementName = prop.propertyElementName;
                            var testCode = prop.testCode;

                            describe(propertyName, () => {

                                if (prop.isInitializable) {
                                    it('should have the same value as the ' + propertyName + ' property in the config.', () => {
                                        prop.testItems.query().forEach(testItem => {
                                            var config = new Object();
                                            config[propertyName] = testItem;

                                            var element = m.create(m[factoryMethod](config));
                                            if (testCode) eval(testCode);

                                            expect(element[propertyName]).toBe(testItem);
                                            expect(element.element[propertyElementName]).toBe(testItem);
                                        });
                                    });
                                    it('should have the same value as the ' + propertyName + 'Binder property in the config.', () => {
                                        prop.testItems.query().forEach(testItem => {
                                            var config = new Object();

                                            config[propertyName + 'Binder'] = bind(testItem, t => t);

                                            var element = m.create(m[factoryMethod](config));
                                            if (testCode) eval(testCode);

                                            expect(element[propertyName]).toBe(testItem);
                                            expect(element.element[propertyElementName]).toBe(testItem);
                                        });
                                    });
                                }

                                it('should get and set the value of the ' + propertyName + ' property.', () => {
                                    var element = m.create(m[factoryMethod]());
                                    if (testCode) eval(testCode);

                                    prop.testItems.query().forEach(testItem => {
                                        element[propertyName] = testItem;
                                        expect(element[propertyName]).toBe(testItem);
                                    });
                                });
                                it('should bind to a model.', () => {
                                    var first,
                                        second,
                                        model,
                                        element;
                                    var testItems = prop.testItems;

                                    for (var i = 0; i < testItems.count(); i++) {
                                        var testItem = testItems[i];
                                        var nextItem = (i == (testItems.count() - 1)) ? testItems[0] : testItems[i + 1];

                                        first = testItem;
                                        second = nextItem;
                                        model = {
                                            property: new b.Property(first)
                                        };

                                        element = m.create(m[factoryMethod]());
                                        if (testCode) eval(testCode);
                                        var binder = bind(model.property, p => p.value);
                                        binder.source = element[propertyName + 'Property'];

                                        model.property.value = second;
                                        expect(element[propertyName]).toBe(second);
                                        expect((<any>element.element)[propertyElementName]).toBe(second);
                                        model.property.value = first;

                                        element[propertyName] = second;
                                        expect(model.property.value).toBe(second);
                                        expect((<any>element.element)[propertyElementName]).toBe(second);
                                        model.property.value = first;

                                        if (!prop.isIdl) {
                                            runs(() => {
                                                (<any>element.element)[propertyElementName] = second;
                                            });
                                            waitsFor(() => {
                                                return model.property.value === second;
                                            }, 'The model was not updated correctly from value "' + first + '" to value "' + second + '".', 20);
                                            waitsFor(() => {
                                                return element[propertyName] === second;
                                            }, 'The decorator was not updated correctly from value "' + first + '" to value "' + second + '".', 20);
                                        }
                                    }
                                });
                            });

                        });

                        //#endregion Properties

                    });
                });

                //#endregion Concrete Elements
            });

            //#endregion Elements

            //#region Events

            describe('Events', () => {
                //#region MouseEvents

                describe('Click Event', () => {
                    it('Should change values of an object when the click event executes.', () => {
                        testClassicalEvent('clickEvent');
                    });

                    it('Should change values of an object when the click event is fired via the DOM.', () => {
                        testDomEvent('clickEvent', 'click');
                    });

                    it('Should change values of an object when the click event is added using addEventListener.', () => {
                        testAddEventListener('click');
                    });
                });

                describe('Double Click Event', () => {
                    it('Should change values of an object when the double click event executes.', () => {
                        testClassicalEvent('doubleClickEvent');
                    });

                    it('Should change values of an object when the double click event is fired via the DOM.', () => {
                        testDomEvent('doubleClickEvent', 'dblclick');
                    });

                    it('Should change values of an object when the double click event is added using addEventListener.', () => {
                        testAddEventListener('dblclick');
                    });
                });

                describe('Mouse Move Event', () => {
                    it('Should change values of an object when the mouse move event executes.', () => {
                        testClassicalEvent('mouseMoveEvent');
                    });

                    it('Should change values of an object when the mouse move is fired via the DOM.', () => {
                        testDomEvent('mouseMoveEvent', 'mousemove');
                    });

                    it('Should change values of an object when the mouse move event is added using addEventListener.', () => {
                        testAddEventListener('mousemove');
                    });
                });

                describe('Mouse Up Event', () => {
                    it('Should change values of an object when the mouse up event executes.', () => {
                        testClassicalEvent('mouseUpEvent');
                    });

                    it('Should change values of an object when the mouse up is fired via the DOM.', () => {
                        testDomEvent('mouseUpEvent', 'mouseup');
                    });

                    it('Should change values of an object when the mouse up event is added using addEventListener.', () => {
                        testAddEventListener('mouseup');
                    });
                });

                describe('Mouse Down Event', () => {
                    it('Should change values of an object when the mouse down event executes.', () => {
                        testClassicalEvent('mouseDownEvent');
                    });

                    it('Should change values of an object when the mouse down is fired via the DOM.', () => {
                        testDomEvent('mouseDownEvent', 'mousedown');
                    });

                    it('Should change values of an object when the mouse down event is added using addEventListener.', () => {
                        testAddEventListener('mousedown');
                    });
                });

                describe('Mouse Enter Event', () => {
                    it('Should change values of an object when the mouse enter event executes.', () => {
                        testClassicalEvent('mouseEnterEvent');
                    });

                    it('Should change values of an object when the mouse enter is fired via the DOM.', () => {
                        testDomEvent('mouseEnterEvent', 'mouseenter');
                    });

                    it('Should change values of an object when the mouse enter event is added using addEventListener.', () => {
                        testAddEventListener('mouseenter');
                    });
                });

                describe('Mouse Leave Event', () => {
                    it('Should change values of an object when the mouse leave event executes.', () => {
                        testClassicalEvent('mouseLeaveEvent');
                    });

                    it('Should change values of an object when the mouse leave is fired via the DOM.', () => {
                        testDomEvent('mouseLeaveEvent', 'mouseleave');
                    });

                    it('Should change values of an object when the mouse leave event is added using addEventListener.', () => {
                        testAddEventListener('mouseleave');
                    });
                });

                describe('Mouse Over Event', () => {
                    it('Should change values of an object when the mouse over event executes.', () => {
                        testClassicalEvent('mouseOverEvent');
                    });

                    it('Should change values of an object when the mouse over is fired via the DOM.', () => {
                        testDomEvent('mouseOverEvent', 'mouseover');
                    });

                    it('Should change values of an object when the mouse over event is added using addEventListener.', () => {
                        testAddEventListener('mouseover');
                    });
                });

                describe('Mouse Out Event', () => {
                    it('Should change values of an object when the mouse out event executes.', () => {
                        testClassicalEvent('mouseOutEvent');
                    });

                    it('Should change values of an object when the mouse out is fired via the DOM.', () => {
                        testDomEvent('mouseOutEvent', 'mouseout');
                    });

                    it('Should change values of an object when the mouse out event is added using addEventListener.', () => {
                        testAddEventListener('mouseout');
                    });
                });

                //#endregion MouseEvents

                //#region KeyboardEvents

                describe('Key Up Event', () => {
                    it('Should change values of an object when the key up event executes.', () => {
                        testClassicalEvent('keyUpEvent');
                    });

                    it('Should change values of an object when the key up event is fired via the DOM.', () => {
                        testDomEvent('keyUpEvent', 'keyup');
                    });

                    it('Should change values of an object when the key up event is added using addEventListener.', () => {
                        testAddEventListener('keyup');
                    });
                });

                describe('Key Down Event', () => {
                    it('Should change values of an object when the key down event executes.', () => {
                        testClassicalEvent('keyDownEvent');
                    });

                    it('Should change values of an object when the key down event is fired via the DOM.', () => {
                        testDomEvent('keyDownEvent', 'keydown');
                    });

                    it('Should change values of an object when the key down event is added using addEventListener.', () => {
                        testAddEventListener('keydown');
                    });
                });

                describe('Key Press Event', () => {
                    it('Should change values of an object when the key press event executes.', () => {
                        testClassicalEvent('keyPressEvent');
                    });

                    it('Should change values of an object when the key press event is fired via the DOM.', () => {
                        testDomEvent('keyPressEvent', 'keypress');
                    });

                    it('Should change values of an object when the key press event is added using addEventListener.', () => {
                        testAddEventListener('keypress');
                    });
                });

                //#endregion KeyboardEvents

                describe('Focus Event', () => {
                    it('Should change values of an object when the focus event executes.', () => {
                        testClassicalEvent('focusEvent');
                    });

                    it('Should change values of an object when the focus event is fired via the DOM.', () => {
                        testDomEvent('focusEvent', 'focus');
                    });

                    it('Should change values of an object when the focus event is added using addEventListener.', () => {
                        testAddEventListener('focus');
                    });
                });

                describe('Blur Event', () => {
                    it('Should change values of an object when the blur event executes.', () => {
                        testClassicalEvent('blurEvent');
                    });

                    it('Should change values of an object when the blur event is fired via the DOM.', () => {
                        testDomEvent('blurEvent', 'blur');
                    });

                    it('Should change values of an object when the blur event is added using addEventListener.', () => {
                        testAddEventListener('blur');
                    });
                });

                describe('Copy Event', () => {
                    it('Should change values of an object when the copy event executes.', () => {
                        testClassicalEvent('copyEvent');
                    });

                    it('Should change values of an object when the copy event is fired via the DOM.', () => {
                        testDomEvent('copyEvent', 'copy');
                    });

                    it('Should change values of an object when the copy event is added using addEventListener.', () => {
                        testAddEventListener('copy');
                    });
                });

                describe('Cut Event', () => {
                    it('Should change values of an object when the cut event executes.', () => {
                        testClassicalEvent('cutEvent');
                    });

                    it('Should change values of an object when the cut event is fired via the DOM.', () => {
                        testDomEvent('cutEvent', 'cut');
                    });

                    it('Should change values of an object when the cut event is added using addEventListener.', () => {
                        testAddEventListener('cut');
                    });
                });

                describe('Paste Event', () => {
                    it('Should change values of an object when the paste event executes.', () => {
                        testClassicalEvent('pasteEvent');
                    });

                    it('Should change values of an object when the paste event is fired via the DOM.', () => {
                        testDomEvent('pasteEvent', 'paste');
                    });

                    it('Should change values of an object when the paste event is added using addEventListener.', () => {
                        testAddEventListener('paste');
                    });
                });

                describe('Scroll Event', () => {
                    it('Should change values of an object when the scroll event executes.', () => {
                        testClassicalEvent('scrollEvent');
                    });

                    it('Should change values of an object when the scroll event is fired via the DOM.', () => {
                        testDomEvent('scrollEvent', 'scroll');
                    });

                    it('Should change values of an object when the scroll event is added using addEventListener.', () => {
                        testAddEventListener('scroll');
                    });
                });

                describe('Resize Event', () => {
                    it('Should change values of an object when the resize event executes.', () => {
                        testClassicalEvent('resizeEvent');
                    });

                    it('Should change values of an object when the resize event is fired via the DOM.', () => {
                        testDomEvent('resizeEvent', 'resize');
                    });

                    it('Should change values of an object when the resize event is added using addEventListener.', () => {
                        testAddEventListener('resize');
                    });
                });
            });

            //#region testClassicalEvent

            function testClassicalEvent(eventPropertyName: string) {
                var testObject = {
                    firstValue: 0,
                    secondValue: 0,
                    thirdValue: 0
                };

                var divisionElement = m.div();
                divisionElement = m.create(divisionElement);
                divisionElement.scrollEvent
                var firstTestFunction = (node, info) => { testObject.firstValue = 1; };
                
                divisionElement[eventPropertyName].subscribe(firstTestFunction);
                divisionElement[eventPropertyName].subscribe((node, info) => { testObject.secondValue = 2; });
                divisionElement[eventPropertyName].subscribe((node, info) => { testObject.thirdValue = 3; });
                divisionElement[eventPropertyName].execute(null);
                
                expect(testObject.firstValue).toBe(1);
                expect(testObject.secondValue).toBe(2);
                expect(testObject.thirdValue).toBe(3);

                testObject = {
                    firstValue: 0,
                    secondValue: 0,
                    thirdValue: 0
                };

                divisionElement[eventPropertyName].unsubscribe(firstTestFunction);
                divisionElement[eventPropertyName].execute(null);

                expect(testObject.firstValue).toBe(0);
                expect(testObject.secondValue).toBe(2);
                expect(testObject.thirdValue).toBe(3);
            }

            //#endregion testClassicalEvent

            //#region testDomEvent

            function testDomEvent(eventPropertyName: string, eventType: string): void {
                var divisionId = 'divisionElementTest';
                var testObject = {
                    firstValue: 0,
                    secondValue: 0,
                    thirdValue: 0
                };

                var divisionConfig = {
                    id: divisionId,
                };
                var divisionElement = m.div(divisionConfig);
                divisionElement = m.create(divisionElement);

                document.body.appendChild(divisionElement.element);

                var firstTestFunction = (node, info) => { testObject.firstValue = 1; };

                divisionElement[eventPropertyName].subscribe(firstTestFunction);
                divisionElement[eventPropertyName].subscribe((node, info) => { testObject.secondValue = 2; });
                divisionElement[eventPropertyName].subscribe((node, info) => { testObject.thirdValue = 3; });
                
                var event = document.createEvent('Event');
                event.initEvent(eventType, true, true);

                document.getElementById(divisionId).dispatchEvent(event);

                expect(testObject.firstValue).toBe(1);
                expect(testObject.secondValue).toBe(2);
                expect(testObject.thirdValue).toBe(3);

                testObject = {
                    firstValue: 0,
                    secondValue: 0,
                    thirdValue: 0
                };

                divisionElement[eventPropertyName].unsubscribe(firstTestFunction);
                document.getElementById(divisionId).dispatchEvent(event);

                expect(testObject.firstValue).toBe(0);
                expect(testObject.secondValue).toBe(2);
                expect(testObject.thirdValue).toBe(3);

                document.body.removeChild(divisionElement.element);
            }

            //#endregion testDomEvent

            //#region testAddEventListener

            function testAddEventListener(eventName: string) {
                var divisionId = 'divisionElementTest';
                var testObject = {
                    firstValue: 0,
                    secondValue: 0,
                    thirdValue: 0
                };

                var divisionConfig = {
                    id: divisionId,
                };
                var divisionElement = m.div(divisionConfig);
                divisionElement = m.create(divisionElement);

                document.body.appendChild(divisionElement.element);

                var firstTestFunction = (e) => { testObject.firstValue = 1; };

                divisionElement.element.addEventListener(eventName, firstTestFunction);
                divisionElement.element.addEventListener(eventName, (e) => { testObject.secondValue = 2; });
                divisionElement.element.addEventListener(eventName, (e) => { testObject.thirdValue = 3; });

                var event = document.createEvent('Event');
                event.initEvent(eventName, true, true);

                document.getElementById(divisionId).dispatchEvent(event);

                expect(testObject.firstValue).toBe(1);
                expect(testObject.secondValue).toBe(2);
                expect(testObject.thirdValue).toBe(3);

                testObject = {
                    firstValue: 0,
                    secondValue: 0,
                    thirdValue: 0
                };

                divisionElement.element.removeEventListener(eventName, firstTestFunction);
                document.getElementById(divisionId).dispatchEvent(event);

                expect(testObject.firstValue).toBe(0);
                expect(testObject.secondValue).toBe(2);
                expect(testObject.thirdValue).toBe(3);

                document.body.removeChild(divisionElement.element);
            }

            //#endregion testAddEventListener

            //#endregion Events
        });
    });
}
